{
  "hash": "d3a493a4901bc25b595f65660a501e1e",
  "result": {
    "markdown": "---\ntitle: \"ggplot の図\"\n---\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(tidyverse)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\n── Attaching packages ─────────────────────────────────────── tidyverse 1.3.2 ──\n✔ ggplot2 3.3.6      ✔ purrr   0.3.4 \n✔ tibble  3.1.8      ✔ dplyr   1.0.10\n✔ tidyr   1.2.0      ✔ stringr 1.4.0 \n✔ readr   2.1.2      ✔ forcats 0.5.1 \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\n```\n:::\n\n```{.r .cell-code}\nlibrary(lubridate)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\n\nAttaching package: 'lubridate'\n\nThe following objects are masked from 'package:base':\n\n    date, intersect, setdiff, union\n```\n:::\n\n```{.r .cell-code}\nlibrary(readxl)\nlibrary(ggpubr)\nlibrary(showtext)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nLoading required package: sysfonts\nLoading required package: showtextdb\n```\n:::\n\n```{.r .cell-code}\nlibrary(patchwork)\n```\n:::\n\n\n## 図の詳細設定\n\n`showtext` パッケージを使って、システムフォントを使えるようにします。\n使用可能なフォントは次のように調べます。\n\n\n::: {.cell}\n\n```{.r .cell-code}\n#! eval: false\nfont_files() |> as_tibble()\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 2,823 × 6\n   path                                 file        family face  version ps_name\n   <chr>                                <chr>       <chr>  <chr> <chr>   <chr>  \n 1 /usr/share/fonts/Fira_Code           FiraCode-V… Fira … Regu… Versio… FiraCo…\n 2 /usr/share/fonts/Fira_Code/static    FiraCode-B… Fira … Bold  Versio… FiraCo…\n 3 /usr/share/fonts/Fira_Code/static    FiraCode-L… Fira … Regu… Versio… FiraCo…\n 4 /usr/share/fonts/Fira_Code/static    FiraCode-M… Fira … Regu… Versio… FiraCo…\n 5 /usr/share/fonts/Fira_Code/static    FiraCode-R… Fira … Regu… Versio… FiraCo…\n 6 /usr/share/fonts/Fira_Code/static    FiraCode-S… Fira … Regu… Versio… FiraCo…\n 7 /usr/share/fonts/Fira_Mono           FiraMono-B… Fira … Bold  Versio… FiraMo…\n 8 /usr/share/fonts/Fira_Mono           FiraMono-M… Fira … Regu… Versio… FiraMo…\n 9 /usr/share/fonts/Fira_Mono           FiraMono-R… Fira … Regu… Versio… FiraMo…\n10 /usr/share/fonts/Fira_Sans_Condensed FiraSansCo… Fira … Regu… Versio… FiraSa…\n# … with 2,813 more rows\n```\n:::\n:::\n\n\nGoogle の Noto シリーズのフォントを使いたいので、`filter()` にかけます。\n\n\n::: {.cell}\n\n```{.r .cell-code}\nfont_files() |> as_tibble() |> \n  filter(str_detect(ps_name, \"NotoSansCJK|NotoSansSymbol\")) |> \n  select(file, face, ps_name) \n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 27 × 3\n   file                          face    ps_name                  \n   <chr>                         <chr>   <chr>                    \n 1 NotoSansCJKjp-Black.otf       Regular NotoSansCJKjp-Black      \n 2 NotoSansCJKjp-Bold.otf        Regular NotoSansCJKjp-Bold       \n 3 NotoSansCJKjp-DemiLight.otf   Regular NotoSansCJKjp-DemiLight  \n 4 NotoSansCJKjp-Light.otf       Regular NotoSansCJKjp-Light      \n 5 NotoSansCJKjp-Medium.otf      Regular NotoSansCJKjp-Medium     \n 6 NotoSansCJKjp-Regular.otf     Regular NotoSansCJKjp-Regular    \n 7 NotoSansCJKjp-Thin.otf        Regular NotoSansCJKjp-Thin       \n 8 NotoSansSymbols-Black.ttf     Regular NotoSansSymbols-Black    \n 9 NotoSansSymbols-Bold.ttf      Bold    NotoSansSymbols-Bold     \n10 NotoSansSymbols-ExtraBold.ttf Regular NotoSansSymbols-ExtraBold\n# … with 17 more rows\n```\n:::\n:::\n\n\nフォントファイルのファイル名は `file` 変数にあります。\nその変数を使って、`font_add()` 関数で用意します。\n\n\n::: {.cell}\n\n```{.r .cell-code}\nfont_add(family = \"notosans\", \n         regular = \"NotoSansCJKjp-Regular.otf\",\n         bold = \"NotoSansCJKjp-Black.otf\",\n         symbol = \"NotoSansSymbols-Regular.ttf\")\n```\n:::\n\n\n図のデフォルトテーマをここで設定します。\n`base_size` はフォントの大きさ。\n`base_family` は `font_add()` で定義した `family` です。\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntheme_gray(base_size = 10, base_family = \"notosans\") |> theme_set()\nshowtext_auto()\n```\n:::\n\n\n論文用のテーマは `ggpubr` パッケージの `theme_pubr()` をおすすめします。\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntheme_pubr(base_size = 10, base_family = \"notosans\") |> theme_set()\nshowtext_auto()\n```\n:::\n\n\n\n## `ggplot2` について\n\n* `ggplot2` の関数は `+` でつなげる\n* `ggplot()` はベースレイヤー\n* `geom_*()` はプロットレイヤー\n* `scales_*()` でエステティク (aesthetics) を調整\n* `theme()` や `theme_()` で書式を調整\n* `facet_wrap()` や `facet_grid()` は多変量データのプロットのパネル分け\n\n## Aesthetics （エステティク）とは\n\n### 色・透明度\n\n* `color`：点と線の色\n* `fill`：面の色\n* `alpha`：透明度（0 -- 1 の値）\n\n### 大きさ・形状\n\n* `size`：点と文字の大きさ、線の太さ\n* `shape`：点の形\n* `linetype`：線の種類\n\n\n### グループ化\n\n* `group`：点や線のグループ化\n\n### 座標、始点・終点\n\n* `x`, `y`\n* `xmin`, `ymin`\n* `xend`, `yend`\n\n\n## geom の種類\n\n**散布図**\n\n* `geom_point()`\n* `geom_jitter()`\n\n**折れ線グラフ**\n\n* `geom_path()`\n* `geom_line()`\n* `geom_step()`\n\n**面グラフ**\n* `geom_ribbon()`\n* `geom_area()`\n* `geom_polygon()`\n\n\n**ヒートマップ・コンター図**\n* `geom_tile()`\n* `geom_raster()`\n* `geom_rect()`\n* `geom_contour()`\n\n**エラーバー**\n* `geom_error()`\n* `geom_linerange()`\n* `geom_pointrange()`\n* `geom_crossbar()`\n\n\n## geom の種類\n\n**曲線など**\n\n* `geom_smooth()`\n* `geom_curve()`\n* `geom_segment()`\n* `geom_abline()`\n* `geom_hline()`\n* `geom_vline()`\n\n**文字列**\n\n* `geom_text()`\n* `geom_label()`\n\n**ヒストグラム・密度曲線**\n* `geom_histogram()`\n* `geom_freqpoly()`\n* `geom_density()`\n* `geom_bin2d()`\n* `geom_hex()`\n* `geom_dotplot()`\n\n**棒グラフ・箱ひげ図**\n* `geom_bar()`\n* `geom_col()`\n* `geom_boxplot()`\n* `geom_violin()`\n\n\n## `ggplot2` の付属パッケージ\n\n**研究室が使っているパッケージ**\n\n* `ggpubr`: `theme_pubr()`, `ggarrange()`\n* `ggrepel`: `geom_text_repel()`\n* `lemon`: `facet_rep_grid()`, `facet_rep_wrap()`\n* `showtext`: システムフォントの埋め込み\n\n[ggplot2 extensions](https://exts.ggplot2.tidyverse.org/)\n\n## データを読み込んだら、可視化しよう\n\n\n::: {.cell}\n\n```{.r .cell-code}\nfilename = \"Table 2.xlsx\"\ncol_names = c(\"month\", \"temperature1\", \"sd1\", \"empty\",\"temperature2\", \"sd2\")\nexceldata = read_excel(filename, sheet = 1, skip = 2, col_name = col_names)\n```\n:::\n\n::: {.cell}\n\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(exceldata) + geom_point(aes(x = month, y = temperature1))\n```\n\n::: {.cell-output-display}\n![](part05_files/figure-html/unnamed-chunk-9-1.png){width=672}\n:::\n:::\n\n\n横軸の順序がおかしいですね。軸タイトルも変えたほうがいいですね。\n\n## 軸タイトルの関数\n\n軸タイトルや図のタイトルは `labs()` 関数でします。\n\n\n::: {.cell}\n\n```{.r .cell-code}\nxlabel = \"Month\"\nylabel = \"'Temperature ('*degree*'C)'\" # plotmath expression see ?plotmath\nggplot(exceldata) + \n  geom_point(aes(x = month, y = temperature1)) + \n  labs(x = xlabel, \n       y = parse(text = ylabel),\n       title = \"Monthly mean water temperature\") \n```\n\n::: {.cell-output-display}\n![](part05_files/figure-html/unnamed-chunk-10-1.png){width=672}\n:::\n:::\n\n\n## 論文用に変える\n\n学術論文に記載する図の場合、図から余計なかざりを外します。\n研究室では `ggpubr` の `theme_pubr()` 関数を使っています。\n\n\n::: {.cell}\n\n```{.r .cell-code}\nxlabel = \"Month\"\nylabel = \"'Temperature ('*degree*'C)'\" # plotmath expression see ?plotmath\nggplot(exceldata) + \n  geom_point(aes(x = month, y = temperature1)) + \n  labs(x = parse(text = xlabel), \n       y = parse(text = ylabel))  +\n  theme_pubr(base_size = 10)\n```\n\n::: {.cell-output-display}\n![](part05_files/figure-html/unnamed-chunk-11-1.png){width=672}\n:::\n:::\n\n\n## 月の順序をなおす\n\nもう気づいたと思いますが、横軸の月の順序が間違っています。\n`factor()` で、`month` 変数を整えます。\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# element_text() size is in points (pt)\n# 1 pt = 0.35 mm\nxlabel = \"Month\"\nylabel = \"'Temperature ('*degree*'C)'\" # plotmath expression see ?plotmath\n\nlevels = month.abb\nlevels = str_c(levels, ifelse(levels == \"May\", \"\", \".\"))\n\nexceldata |> \n  mutate(month = factor(month, levels = levels)) |> \n  ggplot() + \n  geom_point(aes(x = month, y = temperature1)) + \n  labs(x = parse(text = xlabel), \n       y = parse(text = ylabel))  +\n  theme_pubr(base_family = \"notosans\") +\n  theme(text = element_text(size = 10))\n```\n\n::: {.cell-output-display}\n![](part05_files/figure-html/unnamed-chunk-12-1.png){width=672}\n:::\n:::\n\n::: {.cell}\n::: {.cell-output .cell-output-stderr}\n```\nLinking to ImageMagick 6.9.11.60\nEnabled features: fontconfig, freetype, fftw, heic, lcms, pango, webp, x11\nDisabled features: cairo, ghostscript, raw, rsvg\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nUsing 32 threads\n```\n:::\n:::\n\n\n## 図を保存する\n\n図は PDF と PNG 形式で保存しましょう。\n\n**PDFファイル**\n`ggsave()` は最後の表示した図を書き出しします。\n`width` と `height` を指定したら必ず単位も指定しましょう (`units = \"mm\"`)。\nPDFファイルにシステムフォントを埋め込むなら、`device = cairo_pdf`も渡しましょう。\n\n\n::: {.cell}\n\n```{.r .cell-code}\nwh = list(width = 80, height = 80) # 図の縦横幅\npdffile = \"temperature_plot.pdf\"\nggsave(pdffile, width = wh$width, height = wh$height, units = \"mm\", device = cairo_pdf)\n```\n:::\n\n\n**PNGファイル**\n直接PNGファイルに保存する場合は、画像の解像度 (`dpi = 300`) も必要です。\n\n::: {.cell}\n\n```{.r .cell-code}\npngfile = \"temperature_plot.png\"\nggsave(pngfile, width = wh$width, height = wh$height, units = \"mm\", dpi = 300)\n```\n:::\n\n\n---\n\n## 保存の結果\n\n\n::: {.cell}\n::: {.cell-output-display}\n![](part05_files/figure-html/unnamed-chunk-16-1.png){width=505}\n:::\n:::\n\n\n* `wh = list(width = 80, height = 80)` は同じだが、図は似ていません。\n* モニターでみたとき、PDF の解像度は 96 です。つまり、`dpi = 300` のPNGファイルはPDFの約 3 倍の大きさです。\n\n\n## 図のフォントを拡大して、PNGファイルを修正する\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nDPI = 300\nscale = DPI / 96\nexceldata |> \n  mutate(month = factor(month, levels = levels)) |> \n  ggplot() + \n  geom_point(aes(x = month, y = temperature1)) + \n  labs(x = parse(text = xlabel), \n       y = parse(text = ylabel))  +\n  theme_pubr(base_family = \"notosans\") +\n  theme(text = element_text(size = 10 * scale))\n\npngfile = \"temperature_plot.png\"\nwh = list(width = 80, height = 80)\nggsave(pngfile, width = wh$width, height = wh$height, units = \"mm\", dpi = DPI)\n```\n:::\n\n::: {.cell}\n::: {.cell-output-display}\n![](part05_files/figure-html/panel-1.png){width=505}\n:::\n:::\n\n\n## 研究室のワークフロー\n\nPNGファイルのDPIをいじるのが面倒なので、PDFをPNGに変換するのが楽です。\n月の頭文字をチックラベルにします。さらに、`lemon` パッケージの `geom_pointline()`を使ってみました。\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(lemon)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\n\nAttaching package: 'lemon'\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nThe following object is masked from 'package:purrr':\n\n    %||%\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nThe following objects are masked from 'package:ggplot2':\n\n    CoordCartesian, element_render\n```\n:::\n\n```{.r .cell-code}\nxlabel = \"Month\"\nylabel = \"'Temperature'~(degree*C)\" # plotmath expression see ?plotmath\nlevels = month.abb\nlevels = str_c(levels, ifelse(levels == \"May\", \"\", \".\"))\nlabels = str_sub(month.abb, 1, 1)\n# 図の結果は plot1 にいれます。\nplot1 =   exceldata |> mutate(month = factor(month, levels = levels)) |> \n  ggplot() + \n  geom_point(aes(x = month, y = temperature1)) +\n  scale_x_discrete(name = xlabel, labels = labels) +\n  scale_y_continuous(name = parse(text = ylabel), breaks = seq(21, 29, by = 1)) +\n  theme_pubr(base_family = \"notosans\") +\n  theme(text = element_text(size = 10))\n```\n:::\n\n\nまず、PDFファイルを保存します。システムフォントをPDFファイルに入れるためには `device = cairo_pdf` を渡します。\n\n\n::: {.cell}\n\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nwh = list(width = 80, height = 80) # 図の縦横幅\npdffile = \"temperature_plot.pdf\"\nggsave(pdffile, width = wh$width, height = wh$height, units = \"mm\", device = cairo_pdf)\n```\n:::\n\n\nImageMagick のAPIを使って、PDFをPNGに変換します。\nこの方法だと、DPIのややこしい変換は不要です。\n\nつぎに `magick` パッケージを読み込みます。\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(magick) # imagemagick パッケージ\n```\n:::\n\n\nつづいて、PDF ファイルを 600 DPI で読み込む。\n\n::: {.cell}\n\n```{.r .cell-code}\nimg = image_read_pdf(pdffile, density = 600)\n```\n:::\n\n\nPDFファイルをPNGファイルに書き出す。\n\n\n::: {.cell}\n\n```{.r .cell-code}\nimg |> image_write(pngfile)\n```\n:::\n\n\n## 保存の結果\n\n\n::: {.cell layout-align=\"center\"}\n::: {.cell-output-display}\n![](part05_files/figure-html/panel2-1.png){fig-align='center' width=80%}\n:::\n:::\n\n\nこのとき、フォントサイズは 10 pt にしました：`theme(text = element_text(size = 10))`。\n\n## データを追加してプロット\n\n\n::: {.cell}\n::: {.cell-output-display}\n![](part05_files/figure-html/unnamed-chunk-25-1.png){width=288}\n:::\n:::\n\n]\n\n## 複数パネルのプロット\n\n\n::: {.cell}\n\n```{.r .cell-code}\nxlabel = \"Petal width (cm)\"\nylabel = \"Sepal width (cm)\"\niris |> group_nest(Species) |> \n  mutate(L = c(\"A\", \"B\", \"C\")) |> \n  mutate(Species = sprintf(\"italic('I.')~italic('%s')~'(%s)'\",  Species, L)) |> \n  unnest(data) |> \n  ggplot() + \n  geom_point(aes(x = Petal.Width, y = Sepal.Width, color = Species)) +\n  geom_text(aes(x = 3, y = 5, label = Species), parse = TRUE, vjust = 1, hjust = 1,\n            family = \"notosans\", size =3,  check_overlap = TRUE) +\n  scale_x_continuous(name = xlabel, breaks = seq(0, 3), limits = c(0, 3)) +\n  scale_y_continuous(name = ylabel, breaks = seq(0, 5), limits = c(0, 5)) +\n  scale_color_viridis_d(\"\", option = \"turbo\", \n                      begin = 0, end = 0.5, labels = scales::parse_format()) +\n  guides(color = \"none\") +\n  facet_rep_grid(cols = vars(Species)) +\n  theme_pubr(base_family = \"notosans\") +\n  theme(text = element_text(size = 10),\n        strip.background = element_blank(),\n        strip.text = element_blank())\n```\n\n::: {.cell-output-display}\n![](part05_files/figure-html/unnamed-chunk-26-1.png){width=672}\n:::\n:::\n\n\n---\n\n## 複数プロットの結合\n\n\n::: {.cell}\n\n```{.r .cell-code}\nxlabel1 = \"Petal width (cm)\"\nylabel1 = \"Sepal width (cm)\"\nxlabel2 = \"Petal length (cm)\"\nylabel2 = \"Sepal length (cm)\"\n\niris2 = iris |> \n    mutate(Species = sprintf(\"italic('I.')~italic('%s')\",  Species))\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nplot1 = \n  ggplot(iris2) + \n  geom_point(aes(x = Petal.Width, y = Sepal.Width, color = Species)) +\n  scale_x_continuous(name = xlabel1, breaks = seq(0, 8), limits = c(0, 8)) +\n  scale_y_continuous(name = ylabel1, breaks = seq(0, 8), limits = c(0, 8)) +\n  scale_color_viridis_d(\"\", option = \"turbo\", \n                      begin = 0, end = 0.5, labels = scales::parse_format()) +\n  theme_pubr(base_family = \"notosans\") +\n  theme(text = element_text(size = 10))\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nplot2 = \n  ggplot(iris2) + \n  geom_point(aes(x = Petal.Length, y = Sepal.Length, color = Species)) +\n  scale_x_continuous(name = xlabel2, breaks = seq(0, 8), limits = c(0, 8)) +\n  scale_y_continuous(name = ylabel2, breaks = seq(0, 8), limits = c(0, 8)) +\n  scale_color_viridis_d(\"\", option = \"turbo\", \n                      begin = 0, end = 0.5, labels = scales::parse_format()) +\n  theme_pubr(base_family = \"notosans\") +\n  theme(text = element_text(size = 10))\n```\n:::\n\n\n## 複数プロットの結合の結果\n\n\n::: {.cell}\n\n```{.r .cell-code}\nplot1 + plot2 + plot_layout(ncol = 2, \n                            nrow = 1, \n                            guides = \"collect\")\n```\n\n::: {.cell-output-display}\n![](part05_files/figure-html/unnamed-chunk-30-1.png){width=672}\n:::\n:::\n\n\n---\n\n## 線と点（説明変数は離散型変数の場合）\n\n\n::: {.cell}\n\n```{.r .cell-code}\nylabel = \"Petal length (cm)\"\niris2 |> group_by(Species) |> \n  summarise(PL = mean(Petal.Length),\n            sd = sd(Petal.Length)) |> \n  mutate(lower = PL - sd,\n         upper = PL + sd) |> \nggplot() + \n  geom_line(aes(x = Species, y = PL, group = 1)) +\n  geom_point(aes(x = Species, y = PL), size = 2, color = \"white\") +\n  geom_point(aes(x = Species, y = PL), size = 1) +\n  geom_errorbar(aes(x = Species, ymin = lower, ymax = upper),\n                width = 0.0) +  \n  scale_x_discrete(name = \"Species\", labels = scales::parse_format()) +\n  scale_y_continuous(name = ylabel, breaks = seq(0, 8), limits = c(0, 8)) +\n  theme_pubr(base_family = \"notosans\") +\n  theme(text = element_text(size = 10))\n```\n\n::: {.cell-output-display}\n![](part05_files/figure-html/unnamed-chunk-31-1.png){width=672}\n:::\n:::\n\n\n\n## ボーグラフ\n\n\n::: {.cell}\n\n```{.r .cell-code}\nylabel = \"Petal length (cm)\"\niris2 |> group_by(Species) |> \n  summarise(PL = mean(Petal.Length),\n            sd = sd(Petal.Length)) |> \n  mutate(lower = PL - sd,\n         upper = PL + sd) |> \nggplot() + \n  geom_col(aes(x = Species, y = PL, fill = Species)) +\n  geom_errorbar(aes(x = Species, ymin = lower, ymax = upper),\n                width = 0.01) +  \n  scale_x_discrete(name = \"Species\", labels = scales::parse_format()) +\n  scale_y_continuous(name = ylabel, breaks = seq(0, 8), limits = c(0, 8)) +\n  scale_fill_viridis_d(\"\", option = \"turbo\", \n                      begin = 0, end = 0.5, labels = scales::parse_format()) +\n  guides(fill = \"none\") +\n  theme_pubr(base_family = \"notosans\") +\n  theme(text = element_text(size = 10))\n```\n\n::: {.cell-output-display}\n![](part05_files/figure-html/unnamed-chunk-32-1.png){width=672}\n:::\n:::\n\n\n## ボーグラフ（横向き・並び替える）\n\n\n::: {.cell}\n\n```{.r .cell-code}\nylabel = \"Petal length (cm)\"\niris2 |> group_by(Species) |> \n  summarise(PL = mean(Petal.Length),\n            sd = sd(Petal.Length)) |> \n  mutate(lower = PL - sd,\n         upper = PL + sd) |> \n  ggplot(aes(x = fct_reorder(Species, PL, .desc = T))) + \n  geom_col(aes(y = PL, fill = Species)) +\n  geom_errorbar(aes(ymin = lower, ymax = upper),\n                width = 0.1) +  \n  scale_x_discrete(name = \"Species\", labels = scales::parse_format()) +\n  scale_y_continuous(name = ylabel, breaks = seq(0, 8), limits = c(0, 8)) +\n  scale_fill_viridis_d(\"\", option = \"turbo\", \n                      begin = 0, end = 0.5, labels = scales::parse_format()) +\n  guides(fill = \"none\") +\n  theme_pubr(base_family = \"notosans\") +\n  theme(text = element_text(size = 10))+ \n  coord_flip()\n```\n\n::: {.cell-output-display}\n![](part05_files/figure-html/unnamed-chunk-33-1.png){width=672}\n:::\n:::\n\n\n## ヒストグラム\n\n\n::: {.cell}\n\n```{.r .cell-code}\nxlabel = \"Petal length (cm)\"\nylabel = \"Frequency\"\niris2 |> \n  ggplot() + \n  geom_histogram(aes(x = Petal.Length, fill = Species)) +\n  scale_x_continuous(name = xlabel) +\n  scale_y_continuous(name = ylabel) +\n  scale_fill_viridis_d(\"\", option = \"turbo\", \n                      begin = 0, end = 0.5, labels = scales::parse_format()) +\n  theme_pubr(base_family = \"notosans\") +\n  theme(text = element_text(size = 10),\n        legend.position = c(1,1),\n        legend.justification = c(1,1))\n```\n\n::: {.cell-output .cell-output-stderr}\n```\n`stat_bin()` using `bins = 30`. Pick better value with `binwidth`.\n```\n:::\n\n::: {.cell-output-display}\n![](part05_files/figure-html/unnamed-chunk-34-1.png){width=672}\n:::\n:::\n\n\n## ヒストグラム・パネル\n\n\n::: {.cell}\n\n```{.r .cell-code}\nxlabel = \"Petal length (cm)\"\nylabel = \"Frequency\"\niris2 |> \n  ggplot() + \n  geom_histogram(aes(x = Petal.Length, fill = Species),\n                 binwidth = 0.1, center = 0) +\n  scale_x_continuous(name = xlabel, limits = c(0, 10)) +\n  scale_y_continuous(name = ylabel) +\n  scale_fill_viridis_d(\"\", option = \"turbo\", \n                      begin = 0, end = 0.5, labels = scales::parse_format()) +\n  facet_rep_wrap(facets = vars(Species)) +\n  theme_pubr(base_family = \"notosans\") +\n  theme(text = element_text(size = 10),\n        legend.position = c(1,1),\n        legend.justification = c(1,1),\n        strip.background = element_blank(),\n        strip.text = element_blank())\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning: Removed 6 rows containing missing values (geom_bar).\n```\n:::\n\n::: {.cell-output-display}\n![](part05_files/figure-html/unnamed-chunk-35-1.png){width=672}\n:::\n:::\n\n\n## 時系列\n\nデータは (https://covid.ourworldindata.org/data/owid-covid-data.csv)。\n\n\n::: {.cell hash='part05_cache/html/unnamed-chunk-36_e074cf84d0c93bac980ca80478c6c194'}\n\n```{.r .cell-code}\ncovid = read_csv(\"https://covid.ourworldindata.org/data/owid-covid-data.csv\")\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nRows: 216106 Columns: 67\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr   (4): iso_code, continent, location, tests_units\ndbl  (62): total_cases, new_cases, new_cases_smoothed, total_deaths, new_dea...\ndate  (1): date\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n```\n:::\n\n```{.r .cell-code}\ncovid2 = covid |> \n  group_by(continent, date) |> \n  summarise(tc = sum(total_cases_per_million, na.rm=T),\n            td = sum(total_deaths_per_million, na.rm= T)) |> \n  drop_na()\n```\n\n::: {.cell-output .cell-output-stderr}\n```\n`summarise()` has grouped output by 'continent'. You can override using the\n`.groups` argument.\n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nxlabel = \"Date\"\nylabel = \"COVID cases per million\"\nggplot(covid2) +\n  geom_path(aes(x=date, y = tc, color = continent))+\n  scale_x_date(name = xlabel) +\n  scale_y_continuous(name = ylabel) +\n  scale_color_viridis_d(\"\", option = \"turbo\", begin = 0, end = 0.8) +\n  theme_pubr(base_family = \"notosans\") +\n  theme(text = element_text(size = 10),\n        legend.position = c(0,1),\n        legend.justification = c(0,1),\n        strip.background = element_blank(),\n        strip.text = element_blank())\n```\n\n::: {.cell-output-display}\n![](part05_files/figure-html/unnamed-chunk-37-1.png){width=672}\n:::\n:::\n\n\n\n## 時系列\n\n\n::: {.cell}\n\n```{.r .cell-code}\nxlabel = \"Date\"\nylabel = \"COVID cases per million\"\nggplot(covid2) +\n  geom_path(aes(x=date, y = tc, color = continent))+\n  scale_x_date(name = xlabel, date_labels = \"%Y-%m-%d\") +\n  scale_y_continuous(name = ylabel, \n                     breaks = 10^seq(-2,7), limits = c(0.01, 10^7),\n                     trans = \"log10\", labels = scales::label_math(format = log10)) +\n  scale_color_viridis_d(\"\", option = \"turbo\", begin = 0, end = 0.8) +\n  guides(color = guide_legend(ncol = 2)) +\n  theme_pubr(base_family = \"notosans\") +\n  theme(text = element_text(size = 10),\n        legend.position = c(0.5,0),\n        legend.justification = c(0,0),\n        legend.background = element_blank(),\n        strip.background = element_blank(),\n        strip.text = element_blank())\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning: Transformation introduced infinite values in continuous y-axis\n```\n:::\n\n::: {.cell-output-display}\n![](part05_files/figure-html/unnamed-chunk-38-1.png){width=672}\n:::\n:::\n\n\n\n## 時系列軸のカスタムラベル\n\n\n::: {.cell}\n\n```{.r .cell-code}\ngnn_date = function() {\n  function(x) {\n    m = format(x, \"%b\")\n    m = str_sub(m, start = 1, end = 1)\n    y = format(x, \"%Y\")\n    ifelse(duplicated(y), m, sprintf(\"%s\\n%s\", m,y))\n  }\n}\n```\n:::\n\n\n\n## 時系列\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nxlabel = \"Date\"\nylabel = \"COVID cases per million\"\nggplot(covid2) +\n  geom_path(aes(x=date, y = tc, color = continent))+\n  scale_x_date(name = xlabel, date_breaks = \"months\", labels = gnn_date()) +\n  scale_y_continuous(name = ylabel, \n                     breaks = 10^seq(-2,7, by = 2), limits = c(0.01, 10^7),\n                     trans = \"log10\", labels = scales::label_math(format = log10)) +\n  scale_color_viridis_d(\"\", option = \"turbo\", begin = 0, end = 0.8) +\n  guides(color = guide_legend(ncol = 2)) +\n  theme_pubr(base_family = \"notosans\") +\n  theme(text = element_text(size = 10),\n        legend.position = c(0.5,0),\n        legend.justification = c(0,0),\n        legend.background = element_blank(),\n        strip.background = element_blank(),\n        strip.text = element_blank())\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning: Transformation introduced infinite values in continuous y-axis\n```\n:::\n\n::: {.cell-output-display}\n![](part05_files/figure-html/unnamed-chunk-40-1.png){width=672}\n:::\n:::\n\n\n\n## 箱ひげ図\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ncovid2 = covid |> \n  filter(date >= lubridate::ymd(\"2021-01-01\")) |> \n  filter(str_detect(location, \"Indonesia|Japan|South Korea|Taiwan|China\"))\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nxlabel = \"Country\"\nylabel = \"Daily cases per million\"\nggplot(covid2) +\n  geom_boxplot(aes(x = fct_reorder(location, new_cases_per_million, mean, na.rm=T, .desc=T), \n                   y = new_cases_per_million, fill = location)) + \n  scale_x_discrete(name = xlabel) +\n  scale_y_continuous(name = ylabel, \n                     breaks = 10^seq(-3,3, by = 1), limits = 10^c(-3, 3),\n                     trans = \"log10\", labels = scales::label_math(format = log10)) +\n  scale_color_viridis_d(\"\", option = \"turbo\",  begin = 0, end = 0.8) +\n  guides(fill = guide_legend(ncol = 2)) +\n  theme_pubr(base_family = \"notosans\") +\n  theme(text = element_text(size = 10),\n        legend.position = c(0,0),\n        legend.justification = c(0,0),\n        legend.background = element_blank(),\n        legend.title = element_blank(),\n        strip.background = element_blank(),\n        strip.text = element_blank())\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning: Transformation introduced infinite values in continuous y-axis\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning: Removed 316 rows containing non-finite values (stat_boxplot).\n```\n:::\n\n::: {.cell-output-display}\n![](part05_files/figure-html/unnamed-chunk-42-1.png){width=672}\n:::\n:::\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}