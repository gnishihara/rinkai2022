{
  "hash": "285ae259af774338edf1235960ac1ce1",
  "result": {
    "markdown": "---\ntitle: \"線形モデル\"\nformat: \n  html:\n    html-math-method: katex\nreference-location: margin\ncitation-location: margin\nbibliography: references.bib\n---\n\n\n## 必要なパッケージ\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(tidyverse)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\n── Attaching packages ─────────────────────────────────────── tidyverse 1.3.2 ──\n✔ ggplot2 3.3.6      ✔ purrr   0.3.4 \n✔ tibble  3.1.8      ✔ dplyr   1.0.10\n✔ tidyr   1.2.0      ✔ stringr 1.4.0 \n✔ readr   2.1.2      ✔ forcats 0.5.1 \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\n```\n:::\n\n```{.r .cell-code}\nlibrary(car)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nLoading required package: carData\n\nAttaching package: 'car'\n\nThe following object is masked from 'package:dplyr':\n\n    recode\n\nThe following object is masked from 'package:purrr':\n\n    some\n```\n:::\n\n```{.r .cell-code}\nlibrary(patchwork)\n```\n:::\n\n\n\n## 線形モデルとは？ \n\n* 線形モデルの **線型 (linear)** は直線 (straight line) と全く関係ないです。\n* 線型モデルの線型は **線型結合 (linear combination)** を意味しています。\n\n$$\ny = b_1 x_1 + b_2 x_2 + b_3 x_3 + \\cdots + b_n x_n\n$$\n$b_i$ は係数，$x_i$ はベクトル（変数, 説明変数）です。$y$ が $x_i$ の線型結合です。\n\n## 線型モデルは直線じゃなくてもいい\n\n\n**線形モデル**\n\n* $\\mu = \\beta_0 + \\beta_1 x_1$\n* $\\mu = \\beta_0 + \\beta_1 x_1 + \\beta_2 x_2^2$\n* $\\mu = \\beta_0 + \\beta_1\\exp(x_1)$\n\n\n**非線形モデル**\n\n* $\\mu = \\frac{\\beta_1 x_1}{\\beta_2 + x_1}$\n* $\\mu = \\beta_1 \\left(1-\\exp(\\beta_2 x_1)\\right) + \\beta_3$\n* $\\mu = \\beta_0 + \\beta_1\\exp(\\beta_2 x_1)$\n\n\n線形モデルは直線じゃなくてもいい。\nただし，変数 ($x_i$) は線型結合であることが重要なポイントです。\nでは、検討しているモデルは線形モデルかどうかを確認したいなら、パラメータに対してモデルの偏微分方程式を求めてください。\n\nたとえば、モデルパラメータ $(\\beta_i)$ に対して，$\\mu$を微分します。\n\n$$\n\\mu = \\beta_0 + \\beta_1 x_1 + \\beta_2 x_2^2\n$$\n\nパラメータの数ほど微分方程式があります。\n\n$$\n\\frac{\\partial \\mu}{\\partial \\beta_0}  = 1 \\qquad\n\\frac{\\partial \\mu}{\\partial \\beta_1}  = x_1 \\qquad\n\\frac{\\partial \\mu}{\\partial \\beta_2}  = x_2 \n$$\n\n$\\beta_i$ はどの微分方程式に残らないので，このモデルは線形モデルでしょう。\n\n次のモデルは非線形モデルです。\n\n$$\n\\mu = \\frac{\\beta_1 x_1}{\\beta_2 + x_1}\n$$\n\nモデルパラメータは $\\beta_1$, $\\beta_2$ ですね。\nではパラメータに対する偏微分方程式は次の通りです。\n\n$$\n\\begin{aligned}\n\\frac{\\partial \\mu}{\\partial \\beta_1}  &= \\frac{x_1}{\\beta_2 x_1} \\\\\n\\frac{\\partial \\mu}{\\partial \\beta_2}  &= -\\frac{x_1}{(\\beta_2 x_2)^2} \n\\end{aligned}\n$$\n\nパラメータはお互いの方程式に残るので，このモデルは線形モデルではないですね。\n\n## 線形モデルの仮定\n\n線形モデルを用いるときに守るべき仮定は分散分析と同じです。\n\n* 残差が正規分布に従うこと。\n* 残差またはデータはお互いに独立し，同一分布から発生していること。\n\nモデルに対する注意する点\n\n* 説明変数もお互いに関係性（相関関係）が低いこと（関係ないほうがいい）。\n    * 関係性が高いとき，モデルパラメータの推定量の精度 (precision) と正確度 (accuracy) が落ちます。\n    * この現象は多重共線性 (multicollinearity) とよびます。\n* 説明変数はお互いに関係がなければ，**直交性 (orthogonal)** のあるモデルとなり，変数の推定量はお互いとの相関性がないです。\n\n野外データは上の条件を満たすことは珍しいが、すべての条件を満たさなくても解析はできます。\nただし、結果の解釈と考察には気をつけましょう。\n\n## 一般線形モデルの例 (General Linear Model)\n\n解析例にはアヤメのデータをつかっています。\nちなみに、一般線形モデルは一般化線形モデル (Generalized Linear Model, GLM) の特例です。\n\n\n::: {.cell}\n\n```{.r .cell-code}\niris = iris |> as_tibble()\niris |> print(n = 3)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 150 × 5\n  Sepal.Length Sepal.Width Petal.Length Petal.Width Species\n         <dbl>       <dbl>        <dbl>       <dbl> <fct>  \n1          5.1         3.5          1.4         0.2 setosa \n2          4.9         3            1.4         0.2 setosa \n3          4.7         3.2          1.3         0.2 setosa \n# … with 147 more rows\n```\n:::\n:::\n\n\n検討する線型モデルは次の通りです。\n\n$$\nE(\\text{Petal Length}) = b_0 + b_1\\text{Petal Width} + b_2\\text{Sepal Length} + b_3\\text{Sepal Width}\n$$\n\n$E(\\text{Petal Length})$ は花びらの長さの**期待値 (expected value)** といいます。\n\n\n線形モデルなので，`lm()` 関数で解析できます。\nさらに、分散分析表も存在します。\n\n\n::: {.cell}\n\n```{.r .cell-code}\nm1 = lm(Petal.Length ~ Petal.Width + Sepal.Length + Sepal.Width, data = iris)\n```\n:::\n\n\n分散分析表は `summary.aov()` でだします。\n\n\n::: {.cell}\n\n```{.r .cell-code}\nm1 |> summary.aov() |> print(signif.stars = F)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n              Df Sum Sq Mean Sq F value Pr(>F)\nPetal.Width    1  430.5   430.5 4231.49 <2e-16\nSepal.Length   1    9.9     9.9   97.74 <2e-16\nSepal.Width    1    9.0     9.0   88.95 <2e-16\nResiduals    146   14.9     0.1               \n```\n:::\n:::\n\n\nモデルに入れた全ての説明変数のP値は $< 0.0001$ ですね。\n\nでは、線形モデルの係数表を出してみましょう。\n\n\n::: {.cell}\n\n```{.r .cell-code}\nm1 |> summary() |> print(signif.stars = F)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n\nCall:\nlm(formula = Petal.Length ~ Petal.Width + Sepal.Length + Sepal.Width, \n    data = iris)\n\nResiduals:\n     Min       1Q   Median       3Q      Max \n-0.99333 -0.17656 -0.01004  0.18558  1.06909 \n\nCoefficients:\n             Estimate Std. Error t value Pr(>|t|)\n(Intercept)  -0.26271    0.29741  -0.883    0.379\nPetal.Width   1.44679    0.06761  21.399   <2e-16\nSepal.Length  0.72914    0.05832  12.502   <2e-16\nSepal.Width  -0.64601    0.06850  -9.431   <2e-16\n\nResidual standard error: 0.319 on 146 degrees of freedom\nMultiple R-squared:  0.968,\tAdjusted R-squared:  0.9674 \nF-statistic:  1473 on 3 and 146 DF,  p-value: < 2.2e-16\n```\n:::\n:::\n\n\n`Petal.Length` に対して，`Petal.Width` と `Sepal.Length` は正の効果があり，`Sepal.Width` とは負の効果がありました。\nつまり， `Petal.Width` と `Sepal.Length` が上昇すると， `Petal.Length` も上昇します。\n\n分散分析表の場合は、それぞれの変数に対するF値がでたが、係数表の場合は t値 がでました。\n当然それぞれの値も異なった。\n\n何が違うのか？\n\nまず、分散分析の平方和って、さまざま求め方がるあることに気づきましょう。\n\n* Type-I Sum-of-squares\n  * SS(A), SS(B|A), SS(AB|B, A)\n* Type-II Sum-of-squares\n  * SS(A|B), SS(B|A)\n* Type-III Sum-of-squares\n  * SS(A|B), SS(B|A), SS(AB|B,A)\n\n他にもありますが、この 3 つが一般的にです。\n\n**Type-I** の場合、結果は変数の順序に依存します。\n**Type-II** の場合、順序に依存しないが、相互作用はない。\n**Type-III** の場合、順序に依存しないが、相互作用の影響も計算されます。\n\n**Type-I** はRのデフォルトなので、**Type-II** または **Type-II** を使いたいなら、\n`car` パッケージの `Anova()` 関数が必要です。\n\nといくおとで、説明変数の順序をかえるた、次のように異なる結果が返ってきます。\n\n::: {.cell}\n\n```{.r .cell-code}\nm1a  = lm(Petal.Length ~ Petal.Width + Sepal.Length + Sepal.Width, data = iris)\nm1b = lm(Petal.Length ~ Petal.Width + Sepal.Width + Sepal.Length, data = iris)\nm1c = lm(Petal.Length ~ Sepal.Width + Petal.Width + Sepal.Length, data = iris)\nm1a |> summary.aov()\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n              Df Sum Sq Mean Sq F value Pr(>F)    \nPetal.Width    1  430.5   430.5 4231.49 <2e-16 ***\nSepal.Length   1    9.9     9.9   97.74 <2e-16 ***\nSepal.Width    1    9.0     9.0   88.95 <2e-16 ***\nResiduals    146   14.9     0.1                   \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n```\n:::\n\n```{.r .cell-code}\nm1b |> summary.aov()\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n              Df Sum Sq Mean Sq F value   Pr(>F)    \nPetal.Width    1  430.5   430.5 4231.49  < 2e-16 ***\nSepal.Width    1    3.1     3.1   30.37 1.57e-07 ***\nSepal.Length   1   15.9    15.9  156.31  < 2e-16 ***\nResiduals    146   14.9     0.1                     \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n```\n:::\n\n```{.r .cell-code}\nm1c |> summary.aov()\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n              Df Sum Sq Mean Sq F value Pr(>F)    \nSepal.Width    1   85.2    85.2   837.8 <2e-16 ***\nPetal.Width    1  348.3   348.3  3424.1 <2e-16 ***\nSepal.Length   1   15.9    15.9   156.3 <2e-16 ***\nResiduals    146   14.9     0.1                   \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n```\n:::\n:::\n\n\nこのとき、`car` パッケージの `Anova()` 関数を使って平方和の求め方を指定します。\n相互作用なしのモデルなので、Type-II を指定しました。\n相互作用も調べたいなら、`type=\"III\"` を渡してください。\n\n::: {.cell}\n\n```{.r .cell-code}\nm1a |> Anova(type = \"II\")\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nAnova Table (Type II tests)\n\nResponse: Petal.Length\n             Sum Sq  Df F value    Pr(>F)    \nPetal.Width  46.584   1 457.905 < 2.2e-16 ***\nSepal.Length 15.902   1 156.312 < 2.2e-16 ***\nSepal.Width   9.049   1  88.947 < 2.2e-16 ***\nResiduals    14.853 146                      \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n```\n:::\n\n```{.r .cell-code}\nm1b |> Anova(type = \"II\")\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nAnova Table (Type II tests)\n\nResponse: Petal.Length\n             Sum Sq  Df F value    Pr(>F)    \nPetal.Width  46.584   1 457.905 < 2.2e-16 ***\nSepal.Width   9.049   1  88.947 < 2.2e-16 ***\nSepal.Length 15.902   1 156.312 < 2.2e-16 ***\nResiduals    14.853 146                      \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n```\n:::\n\n```{.r .cell-code}\nm1c |> Anova(type = \"II\")\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nAnova Table (Type II tests)\n\nResponse: Petal.Length\n             Sum Sq  Df F value    Pr(>F)    \nSepal.Width   9.049   1  88.947 < 2.2e-16 ***\nPetal.Width  46.584   1 457.905 < 2.2e-16 ***\nSepal.Length 15.902   1 156.312 < 2.2e-16 ***\nResiduals    14.853 146                      \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n```\n:::\n:::\n\n\n係数表は t値の結果は Wald's test と呼びます。\n\n\n::: {.cell}\n\n```{.r .cell-code}\nm1 |> summary()\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n\nCall:\nlm(formula = Petal.Length ~ Petal.Width + Sepal.Length + Sepal.Width, \n    data = iris)\n\nResiduals:\n     Min       1Q   Median       3Q      Max \n-0.99333 -0.17656 -0.01004  0.18558  1.06909 \n\nCoefficients:\n             Estimate Std. Error t value Pr(>|t|)    \n(Intercept)  -0.26271    0.29741  -0.883    0.379    \nPetal.Width   1.44679    0.06761  21.399   <2e-16 ***\nSepal.Length  0.72914    0.05832  12.502   <2e-16 ***\nSepal.Width  -0.64601    0.06850  -9.431   <2e-16 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 0.319 on 146 degrees of freedom\nMultiple R-squared:  0.968,\tAdjusted R-squared:  0.9674 \nF-statistic:  1473 on 3 and 146 DF,  p-value: < 2.2e-16\n```\n:::\n:::\n\n\nこのとき、$\\beta = 0$ の帰無仮説を検証しています。\nつまり、係数の値は 0 か 0 じゃないかですね。\n\nWald's test と F-test のこちらもモデルの解析に使えます。\nところが、一般的には、モデル選択に F-test を使いますが、\n係数が 0 か 0 じゃないかの検証には Wald's test を使います。\nちなみに、このモデルの場合、$(t_\\nu)^2 = F_{(1,\\nu)}$ なので、\n係数表のt値の2乗は Type-II 分散分析のF値と同じです。\n\n\n\n## モデル診断\n\nモデルを当てはめたあと、最も重要な解析はモデル残渣の確認です。\nモデル残渣に異常があると、モデルとデータの相性が悪いです。\nモデルとデータが合わない場合、求めた係数を信用できません。\n\n一般線形モデルのとき、標準化残渣 (standardized residuals) をもとめて、モデルの良さを目で確認します。\nつまり、標準化残渣を様々形の図を作ります。\n\nまず、残渣を持てめて、図に使うデータを準備します。\n\n\n::: {.cell}\n\n```{.r .cell-code}\nfiris = fortify(m1) |> as_tibble()\nfiris\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 150 × 10\n   Petal…¹ Petal…² Sepal…³ Sepal…⁴   .hat .sigma .cooksd .fitted  .resid .stdr…⁵\n     <dbl>   <dbl>   <dbl>   <dbl>  <dbl>  <dbl>   <dbl>   <dbl>   <dbl>   <dbl>\n 1     1.4     0.2     5.1     3.5 0.0205  0.320 3.73e-4    1.48 -0.0842 -0.267 \n 2     1.4     0.2     4.9     3   0.0212  0.319 3.71e-3    1.66 -0.261  -0.828 \n 3     1.3     0.2     4.7     3.2 0.0201  0.320 3.84e-4    1.39 -0.0864 -0.274 \n 4     1.5     0.2     4.6     3.1 0.0221  0.320 8.46e-4    1.38  0.122   0.387 \n 5     1.4     0.2     5       3.6 0.0230  0.320 1.68e-4    1.35  0.0533  0.169 \n 6     1.7     0.4     5.4     3.9 0.0327  0.320 9.86e-5    1.73 -0.0339 -0.108 \n 7     1.4     0.3     4.6     3.4 0.0255  0.320 3.34e-4    1.33  0.0711  0.226 \n 8     1.5     0.2     5       3.4 0.0189  0.320 2.81e-5    1.48  0.0241  0.0763\n 9     1.4     0.2     4.4     2.9 0.0293  0.320 1.14e-4    1.36  0.0386  0.123 \n10     1.5     0.1     4.9     3.1 0.0225  0.320 1.32e-4    1.45  0.0479  0.152 \n# … with 140 more rows, and abbreviated variable names ¹​Petal.Length,\n#   ²​Petal.Width, ³​Sepal.Length, ⁴​Sepal.Width, ⁵​.stdresid\n```\n:::\n:::\n\n\n\n### 残渣の正規性\n\nまずは残渣は正規分布に従うかを評価します。\n正規性はヒストグラムとQQプロットでします。\n残渣が正規分布に従うなら、ヒストグラムは正規分布に似ていて、\nQQプロットでは残渣を示す点が赤色の直線上に並びます。\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(firis) + \n  geom_histogram(aes(x = .stdresid, y = ..density..)) +\n  stat_function(fun = dnorm, color = \"red\") +\n  labs(x = \"Standardized residual\", y = \"\") \n```\n\n::: {.cell-output .cell-output-stderr}\n```\n`stat_bin()` using `bins = 30`. Pick better value with `binwidth`.\n```\n:::\n\n::: {.cell-output-display}\n![残渣のヒストグラムと正規分布](glm_files/figure-html/unnamed-chunk-10-1.png){width=672}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(firis) + \n  geom_qq(aes(sample = .stdresid)) +\n  geom_abline(color = \"red\") +\n  labs(x = \"Theoretical Quantile\", y = \"Standardized residual\") \n```\n\n::: {.cell-output-display}\n![QQプロット](glm_files/figure-html/unnamed-chunk-11-1.png){width=672}\n:::\n:::\n\n\nどちらの図を確認しても、標準化残渣は正規分布に従っているように見えます。\n\n\n### 残渣のばらつき\n\n正規性に問題がなければ、次は標準化残渣のばらつきを確認したいです。\nすべての変数に対して残渣の図をつくります。\nまた、求めた期待値に対しても残渣を確認します。\n残渣になんかしらのパタンがあると、問題です。\n\n\n::: {.cell}\n\n```{.r .cell-code}\nfiris |> \n  select(matches(\"Petal|Sepal\"), .stdresid) |> \n  pivot_longer(matches(\"Petal|Sepal\")) |> \n  ggplot() + \n  geom_point(aes(x = value, y = .stdresid)) + \n  geom_hline(yintercept = 0, linetype = \"dashed\", color = \"red\") +\n  facet_wrap(vars(name), scales = \"free\")\n```\n\n::: {.cell-output-display}\n![標準化残渣と応答変数、それぞれの説明変数との関係](glm_files/figure-html/unnamed-chunk-12-1.png){width=672}\n:::\n:::\n\n\n残渣は 0 をまたいで均等にばらついていることが確認できました。\nさらに、ばらつきに明確なパタンがないので、この点についてモデルには問題なさそうです。\n次は残渣と期待値の関係を確認します。\n\n\n::: {.cell}\n\n```{.r .cell-code}\nfiris |> \n  select(.fitted, .stdresid) |> \n  ggplot() + \n  geom_point(aes(x = .fitted, y = .stdresid)) + \n  geom_hline(yintercept = 0, linetype = \"dashed\", color = \"red\") \n```\n\n::: {.cell-output-display}\n![標準化残渣と期待値の関係](glm_files/figure-html/unnamed-chunk-13-1.png){width=672}\n:::\n:::\n\n\n期待値と標準化残渣の関係を確認すると、特に問題はないですね。\n場合によって、標準化残渣の絶対値の平方根で確認しやすい場合もあります。\nこの解析の場合は不必要ですが、コードと結果は次の通りです。\n\n\n::: {.cell}\n\n```{.r .cell-code}\nfiris |> \n  select(.fitted, .stdresid) |> \n  ggplot() + \n  geom_point(aes(x = .fitted, y = sqrt(abs(.stdresid)))) \n```\n\n::: {.cell-output-display}\n![標準化残渣の平方根と期待値の関係](glm_files/figure-html/unnamed-chunk-14-1.png){width=672}\n:::\n:::\n\n\n最後に、クックの距離を確認します。クックの距離 (Cook's distance) はモデルの当てはめに強く影響する値を検出してくれます。\nデータ点のクックの距離が $P(F_{(n, n-p)}=0.5)$ を超えた場合、ちょっと怪しいかもしれないです。\n\n::: {.cell}\n\n```{.r .cell-code}\ndof = summary(m1) |> pluck(\"df\")\nthold = qf(0.5, dof[1], dof[2])\nfiris |> \n  mutate(n = 1:n()) |> \n  mutate(above = ifelse(.cooksd > thold, T, F)) |> \n  ggplot() + \n  geom_point(aes(x = n, y = .cooksd, color = above)) + \n  geom_hline(yintercept = thold, color = \"red\", linetype = \"dashed\")\n```\n\n::: {.cell-output-display}\n![](glm_files/figure-html/unnamed-chunk-15-1.png){width=672}\n:::\n:::\n\n\n診断図から問題ないと判断できたら、説明変数の多重鏡線性を確認しましょう。\nまず，説明変数がお互いに相関があるかを確認します。\n\n\n::: {.cell}\n\n```{.r .cell-code}\niris |> select(-Species, - Petal.Length) |> cor()\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n             Sepal.Length Sepal.Width Petal.Width\nSepal.Length    1.0000000  -0.1175698   0.8179411\nSepal.Width    -0.1175698   1.0000000  -0.3661259\nPetal.Width     0.8179411  -0.3661259   1.0000000\n```\n:::\n:::\n\n\n`Petal.Width` と `Sepal.Length` の相関は高いですが，他は 0 に近いので相関関係は低いです。\n多重共線性をしっかりと確認したければ，分散拡大係数 (Variance Inflation Factor; VIF) をもとめます。\n\nVIF は決定係数 $(R_i^2)$ をつかって計算するので，方程式は次の通りです。\n\n$$\n\\text{VIF} = \\frac{1}{1-R_i^2}\n$$\n\nVIF を計算するには，説明変数 $x_i$ を他の説明変数 $x_{j \\neq i}$ との線形モデル組み立てて，決定係数を求める必要があります。\n\nつまり，先ほどの相関係数の結果をつかうと，\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nx1 = lm(Petal.Width ~ Sepal.Length + Sepal.Width, \n        data = iris) |> summary() |> pluck(\"r.squared\")\nx2 = lm(Sepal.Length ~ Petal.Width + Sepal.Width, \n        data = iris) |> summary() |> pluck(\"r.squared\")\nx3 = lm(Sepal.Width ~ Sepal.Length + Petal.Width, \n        data = iris) |> summary() |> pluck(\"r.squared\")\n1 / (1-c(x1,x2,x3)) # VIF\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 3.889961 3.415733 1.305515\n```\n:::\n:::\n\n\n`car` パッケージの `vif()` 関数の方が便利です。\n\n\n::: {.cell}\n\n```{.r .cell-code}\ncar::vif(m1)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n Petal.Width Sepal.Length  Sepal.Width \n    3.889961     3.415733     1.305515 \n```\n:::\n:::\n\n\n$VIF(\\beta_i) > 10$ であれば，多重共線性の問題は大きいと考えられます。\nこのときの決定係数は $1-1/10 = 0.90$ です。\n\n## ガラパゴス諸島における種数の解析\n\n`iris` データの解析に大きな問題がなかったので、あまり参考にならなかったので、\nガラパゴス諸島のデータを解析してみましょう。\n\n`faraway` パッケージの `gala` を解析します。\n`gala` にはガラパゴス諸島の生態系に対しての 7 つの変数があります。`Species` は植物の種数，`Endemics` は植物の固有種，\n`Area` は島の平面積 (m^2^)，`Elevation` は島の最も高い場所 (m)，`Nearest` は最も近い島からの距離 (km)，`Scruz` はサンタクルス島からの距離 (km)，`Adjacent` は最も近い島の面積 (m^2^)です。\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndata(gala, package = \"faraway\")\ngala = gala |> as_tibble() # tibble に変換\ngala |> print(n = 3) # 最初の 3 行を表示\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 30 × 7\n  Species Endemics  Area Elevation Nearest Scruz Adjacent\n    <dbl>    <dbl> <dbl>     <dbl>   <dbl> <dbl>    <dbl>\n1      58       23 25.1        346     0.6   0.6     1.84\n2      31       21  1.24       109     0.6  26.3   572.  \n3       3        3  0.21       114     2.8  58.7     0.78\n# … with 27 more rows\n```\n:::\n:::\n\n\n\n解析する前に、データの可視化をします。\n\n\n::: {.cell}\n::: {.cell-output-display}\n![](glm_files/figure-html/unnamed-chunk-20-1.png){width=576}\n:::\n:::\n\n\n説明変数 (explanatory variable)、または予測子 (Predictor) に対する種数の変動は予測子によって変わることがわかります。\n\n\n::: {.cell}\n\n```{.r .cell-code}\ngala_out = gala |> select(-Endemics) |> gather(Variable, Predictor, -Species)\nggplot(gala_out) + geom_point(aes(x=Predictor, y=Species)) + facet_wrap(\"Variable\", scales = \"free_x\")\n```\n:::\n\n\nでは、モデルと帰無仮設を決めます。\n\n「種数の増減は予測子に依存する」を作業仮説にしたとき，モデルは次のようになります。\n\n$$\nE(\\text{Species}) = b_0 + b_1\\text{Area}+b_2\\text{Elevation}+b_3\\text{Nearest}+b_4\\text{Scruz}+b_5\\text{Adjacent}\n$$\n\nネイマン＝ピアソン (Neyman-Pearson) の枠組みの中で解析するなら，帰無仮設と対立仮設を建てなければなりません。\n\n* 帰無仮設： $b_0 = b_1 = b_2 = b_3 = b_4 = b_5$\n* 対立仮説： $b_0 \\neq b_1 \\neq b_2 \\neq b_3 \\neq b_4 \\neq b_5$\n\n解析は次の通りです。\nこの度、帰無仮説のモデルもわさわさくみました。\n\n\n::: {.cell}\n\n```{.r .cell-code}\nH0 = lm(Species ~ 1, data = gala)  # これが帰無仮設のモデルです。\nHF = lm(Species ~ Area + Elevation + Nearest + Scruz + Adjacent, data = gala) # これが対立仮説のモデルです。\n```\n:::\n\n\n相互作用を入れていないが、Type-III SS を求めます。\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# anova(H0, HF) # Type-I SS\nAnova(H0, HF, type = \"III\")   # Type=III SS\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nAnova Table (Type III tests)\n\nResponse: Species\n            Sum Sq Df F value    Pr(>F)    \n(Intercept) 217942  1  58.618 6.805e-08 ***\nResiduals    89231 24                      \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n```\n:::\n:::\n\n\n**P値は < 0.0001 なので，0.05 より小さいです。帰無仮設は棄却できます。**\n帰無仮設を棄却したら，採択するモデル（モデルは採択できるが，仮説は採択できません）の\n診断図を作図して，残差のばらつきや正規性などを確認します。\n\nでは、HF の診断図を確認しましょう。\n\n\n::: {.cell}\n\n```{.r .cell-code}\nfgala = fortify(HF)\np1 = ggplot(fgala) + \n  geom_histogram(aes(x = .stdresid, y = ..density..)) +\n  stat_function(fun = dnorm, color = \"red\") +\n  labs(x = \"Standardized residual\", y = \"\") \np2 = ggplot(fgala) + \n  geom_qq(aes(sample = .stdresid)) +\n  geom_abline(color = \"red\") +\n  labs(x = \"Theoretical Quantile\", y = \"Standardized residual\") \np1 | p2\n```\n\n::: {.cell-output .cell-output-stderr}\n```\n`stat_bin()` using `bins = 30`. Pick better value with `binwidth`.\n```\n:::\n\n::: {.cell-output-display}\n![](glm_files/figure-html/unnamed-chunk-24-1.png){width=672}\n:::\n:::\n\n\nデータ数は少ないが，残差は 0 を中心にしていて左右対称です。\n殆どの残差はQQプロットの直線に沿っています。\nよって，残差の正規性に大きな問題はなさそうです。\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nfgala |> \n  select(Species, Area, Elevation, Nearest, Scruz, Adjacent, .stdresid) |> \n  pivot_longer(-.stdresid) |> \n  ggplot() + \n  geom_point(aes(x = value, y = .stdresid)) + \n  geom_hline(yintercept = 0, linetype = \"dashed\", color = \"red\") +\n  facet_wrap(vars(name), scales = \"free\")\n```\n\n::: {.cell-output-display}\n![](glm_files/figure-html/unnamed-chunk-25-1.png){width=672}\n:::\n:::\n\n\n\n予測子に対する残差の分布を確認すると，均等に分布していないように見えます。\n例えば **Residual vs. Nearest** の場合，波状を描いているように見えます。\n\n## モデルの診断図：期待値に対する残差のばらつき\n\n\n::: {.cell}\n\n```{.r .cell-code}\np1 = fgala |> \n  select(.fitted, .stdresid) |> \n  ggplot() + \n  geom_point(aes(x = .fitted, y = .stdresid)) + \n  geom_hline(yintercept = 0, linetype = \"dashed\", color = \"red\") \np2 = fgala |> \n  select(.fitted, .stdresid) |> \n  ggplot() + \n  geom_point(aes(x = .fitted, y = sqrt(abs(.stdresid)))) \np1 | p2\n```\n\n::: {.cell-output-display}\n![](glm_files/figure-html/unnamed-chunk-26-1.png){width=672}\n:::\n:::\n\n\n残差のばらつきは期待値と関係性が有るように見えます (Residual vs. Fitted Values Plot)。\nScale--Location Plot では，その関係が明確です。\n\n次は異常値を探してみましょう。\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndof = summary(HF) |> pluck(\"df\")\nthold = qf(0.5, dof[1], dof[2])\nfgala |> \n  mutate(n = 1:n()) |> \n  mutate(above = ifelse(.cooksd > thold, T, F)) |> \n  ggplot() + \n  geom_point(aes(x = n, y = .cooksd, color = above)) + \n  geom_hline(yintercept = thold, color = \"red\", linetype = \"dashed\")\n```\n\n::: {.cell-output-display}\n![](glm_files/figure-html/unnamed-chunk-27-1.png){width=672}\n:::\n:::\n\n\nクックの距離が $P(F_{(p, n-p)}=0.5)$ を超えれば，影響力の高い点だと考えられます。\nこのとき，16番目のデータが明らかに超えています。\n\n$P(F_{(p, n-p)}=0.5)$は自由度 $p$ (パラメータの数) と $n-p$ (データ数からパラメータ数の差) のときのF値の中央値です。\n\n\n::: {.cell}\n\n```{.r .cell-code}\nwhich(cooks.distance(HF) > thold)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n16 \n16 \n```\n:::\n:::\n\n\nいろいろと問題があったので、モデルの改良は必要ですね。\nところが、モデルを改良するときの問題点を意識してください。\n\n**帰無仮設は棄却できたが，診断図を確認すると多数の問題点がありました。**\nこのようなとき，モデルを改良する必要があります。\nただし，ネイマン=ピアソンの帰無仮設検定法のとき，**検討するモデルが増えれば増えるほど第１種の誤りを起こす確率も上がります。**\n\n\n::: {.cell}\n\n:::\n\n\n5 つの予測子（変数）があるので，交互作用ありの一次式のモデルの場合，パラメータの数は32 です。\n検証できるパラメータ数はデータ数に制限されるので，\nパラメータ数とデータ数が等しいときのモデルは[飽和モデル](https://stats.stackexchange.com/questions/283/what-is-a-saturated-model)とよびます。\nちなみに，32 パラメータのときの第 1 種の誤りを起こす確率は 0.8063 です。\n飽和モデルのとき，分散を推定することができないので，飽和モデルは理論上のモデルです。\n\n\n## モデル構築の考え方\n\n\nモデルを設計するときに最も大事なことは：\n\n* 統計解析の仮定を守る\n* 科学的・統計学的にありえる\n* 説明しやすい\n* シンプル・単純である\n\nモデルの改良点：\n\n* 応答変数を変換する\n* 説明変数を変換する\n* 誤差項の分布を変える\n* モデルパラメータを増やす（二次関数・三次関数・交互作用など）\n\n\n### 応答変数の変換\n\n残差に問題があるとき，応答変数を変換することが一般的に行われています。\n応答変数の変換は，残差を正規分布に従わせるためにします。\n\nたとえば個体数はつねに $y\\ge 0$ です。負の個体数は存在しません。\nこのとき，正規分布を仮定したら，0 近辺の値の 95% 信頼区間は負の値をとることもあります。\n実データとの整合性がとれなくなります。\nまたは，0 から 1 の値しか取れないデータのときでも正規性に問題がでます。\n\n応答変数が個体数のような正の整数のとき，ログ変換することが多いです。`log(x)`\nまたは，0 から 1 の比率の様なデータのとき，アークサイン変換をします。 `asin(x)`\n\n## 応答変数変換した解析\n\n応答変数をログ変換した解析と変換していない解析の結果はつぎの通りです。\n\n**ログ変換後の分散分析表**\n\n\n::: {.cell}\n\n```{.r .cell-code}\ngala = gala |> mutate(logSpecies = log(Species))\nlogHF = lm(logSpecies~ Area + Elevation + Nearest + Scruz + Adjacent, data = gala)\nlogHF |> Anova(type = \"III\") |> print(signif.stars = F)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nAnova Table (Type III tests)\n\nResponse: logSpecies\n            Sum Sq Df F value    Pr(>F)\n(Intercept) 53.956  1 48.7039 3.238e-07\nArea         3.998  1  3.6088   0.06955\nElevation   26.168  1 23.6211 5.927e-05\nNearest      0.918  1  0.8289   0.37164\nScruz        1.217  1  1.0984   0.30505\nAdjacent     7.597  1  6.8575   0.01505\nResiduals   26.588 24                  \n```\n:::\n:::\n\n\n**変換なしの分散分析表**\n\n\n::: {.cell}\n\n```{.r .cell-code}\nHF |> Anova(type = \"III\") |> print(signif.stars = F)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nAnova Table (Type III tests)\n\nResponse: Species\n            Sum Sq Df F value    Pr(>F)\n(Intercept)    506  1  0.1362 0.7153508\nArea          4238  1  1.1398 0.2963180\nElevation   131767  1 35.4404 3.823e-06\nNearest          0  1  0.0001 0.9931506\nScruz         4636  1  1.2469 0.2752082\nAdjacent     66406  1 17.8609 0.0002971\nResiduals    89231 24                  \n```\n:::\n:::\n\n\n変数（パラメータ）に対するP値はが変わりました。\n変換なしの解析に比べて，ログ変換後の`Elevation` と `Nearest` のP値は下がりましたが，その他のP値は上がりました。\n\n\n::: {.cell}\n\n```{.r .cell-code}\nfgala = fortify(logHF)\np1 = ggplot(fgala) + \n  geom_histogram(aes(x = .stdresid, y = ..density..)) +\n  stat_function(fun = dnorm, color = \"red\") +\n  labs(x = \"Standardized residual\", y = \"\") \np2 = ggplot(fgala) + \n  geom_qq(aes(sample = .stdresid)) +\n  geom_abline(color = \"red\") +\n  labs(x = \"Theoretical Quantile\", y = \"Standardized residual\") \np1 | p2\n```\n\n::: {.cell-output .cell-output-stderr}\n```\n`stat_bin()` using `bins = 30`. Pick better value with `binwidth`.\n```\n:::\n\n::: {.cell-output-display}\n![](glm_files/figure-html/unnamed-chunk-32-1.png){width=672}\n:::\n:::\n\n\nログ変換なしの結果よりちょっと良くなったと思います。\n\n\n::: {.cell}\n\n```{.r .cell-code}\nfgala |> \n  select(logSpecies, Area, Elevation, Nearest, Scruz, Adjacent, .stdresid) |> \n  pivot_longer(-.stdresid) |> \n  ggplot() + \n  geom_point(aes(x = value, y = .stdresid)) + \n  geom_hline(yintercept = 0, linetype = \"dashed\", color = \"red\") +\n  facet_wrap(vars(name), scales = \"free\")\n```\n\n::: {.cell-output-display}\n![](glm_files/figure-html/unnamed-chunk-33-1.png){width=672}\n:::\n:::\n\n\n説明変数が上昇すると残差のばらつきが減少する傾向があるので，残差のばらつきに問題があります。\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\np1 = fgala |> \n  select(.fitted, .stdresid) |> \n  ggplot() + \n  geom_point(aes(x = .fitted, y = .stdresid)) + \n  geom_hline(yintercept = 0, linetype = \"dashed\", color = \"red\") \np2 = fgala |> \n  select(.fitted, .stdresid) |> \n  ggplot() + \n  geom_point(aes(x = .fitted, y = sqrt(abs(.stdresid)))) \np1 | p2\n```\n\n::: {.cell-output-display}\n![](glm_files/figure-html/unnamed-chunk-34-1.png){width=672}\n:::\n:::\n\n\n期待値に対しても，残差のばらつきの均一性が問題です。さらに Scale - Location Plot には明らか傾向があります。\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndof = summary(logHF) |> pluck(\"df\")\nthold = qf(0.5, dof[1], dof[2])\nfgala |> \n  mutate(n = 1:n()) |> \n  mutate(above = ifelse(.cooksd > thold, T, F)) |> \n  ggplot() + \n  geom_point(aes(x = n, y = .cooksd, color = above)) + \n  geom_hline(yintercept = thold, color = \"red\", linetype = \"dashed\")\n```\n\n::: {.cell-output-display}\n![](glm_files/figure-html/unnamed-chunk-35-1.png){width=672}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nwhich(cooks.distance(logHF) > thold)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n16 \n16 \n```\n:::\n:::\n\n\n16番目のデータに対して，クックの距離は下がったが，$PF_{(n, n-p)}=0.5)$ 以上のままなので，課題としてのこります。\n\n\n### 応答変数以外の解決手法\n\n応答変数をログ変換しても問題は解決できませんでした。\n次に検討することは説明変数の変換または、削除です。\nまずは，VIF の高い変数から外してみみます。\n\n\n::: {.cell}\n\n```{.r .cell-code}\ncar::vif(logHF)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n     Area Elevation   Nearest     Scruz  Adjacent \n 2.928145  3.992545  1.766099  1.675031  1.826403 \n```\n:::\n:::\n\n\n`Elevation` の値が一番高かったので，`Elevation` なしのモデルを再解析します。\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlogHF2 = lm(logSpecies~ Area + Nearest + Scruz + Adjacent, data = gala)\ncar::vif(logHF2)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n    Area  Nearest    Scruz Adjacent \n1.047496 1.669984 1.658583 1.073529 \n```\n:::\n:::\n\n\n診断図を確認したら，結果は良くなかったので，`Nearest` か `Scruz` も外します。\n種数は島と島の間の距離に依存するかもしれないが，一つの島（Santa Cruz島）との距離の影響は考えにくいので，`Scruz` を外します。\n\n## 単純化したモデル\n\n結果として，つぎのモデルを解析することになりました。\n\n$$\nE(\\log(\\text{Species})) = b_0 + b_1\\text{Area}+b_2\\text{Nearest}+b_3\\text{Adjacent}\n$$\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlogSF = lm(logSpecies~ Area + Nearest + Adjacent, data = gala)\nlogSF |> Anova(type = \"III\") |> print(signif.stars = F)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nAnova Table (Type III tests)\n\nResponse: logSpecies\n             Sum Sq Df F value    Pr(>F)\n(Intercept) 159.281  1 74.7879 3.983e-09\nArea         13.201  1  6.1981   0.01951\nNearest       2.372  1  1.1139   0.30095\nAdjacent      0.180  1  0.0847   0.77335\nResiduals    55.374 26                  \n```\n:::\n:::\n\n\n`Area` 以外の変数のP値は 0.05 より高いです。\n\n## 診断図\n\n\n::: {.cell}\n\n```{.r .cell-code}\nfgala = fortify(logSF)\np1 = ggplot(fgala) + \n  geom_histogram(aes(x = .stdresid, y = ..density..)) +\n  stat_function(fun = dnorm, color = \"red\") +\n  labs(title = \"Histogram\", x = \"Standardized residual\", y = \"\") \np2 = ggplot(fgala) + \n  geom_qq(aes(sample = .stdresid)) +\n  geom_abline(color = \"red\") +\n  labs(title = \"QQ plot\", x = \"Theoretical Quantile\", y = \"Standardized residual\") \np3 = fgala |> \n  select(logSpecies, Area, Nearest, Adjacent, .stdresid) |> \n  pivot_longer(-.stdresid) |> \n  ggplot() + \n  geom_point(aes(x = value, y = .stdresid)) + \n  geom_hline(yintercept = 0, linetype = \"dashed\", color = \"red\") +\n  labs(title = \"Resid. vs. predictor\", x = \"Predictor value\", y = \"Standardized residual\") +\n  facet_wrap(vars(name), scales = \"free\")\np4 = fgala |> \n  select(.fitted, .stdresid) |> \n  ggplot() + \n  geom_point(aes(x = .fitted, y = .stdresid)) + \n  geom_hline(yintercept = 0, linetype = \"dashed\", color = \"red\")  +\n  labs(title = \"Resid. vs. fit\", x = \"Fitted value\", y = \"Standardized residual\")\np5 = fgala |> \n  select(.fitted, .stdresid) |> \n  ggplot() + \n  geom_point(aes(x = .fitted, y = sqrt(abs(.stdresid))))  +\n  labs(title = \"Scale - location\", x = \"Fitted value\", y = \"Standardized residual\")\ndof = summary(logSF) |> pluck(\"df\")\nthold = qf(0.5, dof[1], dof[2])\np6 = fgala |> \n  mutate(n = 1:n()) |> \n  mutate(above = ifelse(.cooksd > thold, T, F)) |> \n  ggplot() + \n  geom_point(aes(x = n, y = .cooksd, color = above)) + \n  geom_hline(yintercept = thold, color = \"red\", linetype = \"dashed\") +\n  labs(title = \"Cook's distance\", x = \"Index\", y = \"Cook's distance\")\n\np1 + p2 + p3 + p4 + p5 + p6\n```\n\n::: {.cell-output .cell-output-stderr}\n```\n`stat_bin()` using `bins = 30`. Pick better value with `binwidth`.\n```\n:::\n\n::: {.cell-output-display}\n![](glm_files/figure-html/unnamed-chunk-40-1.png){width=672}\n:::\n:::\n\n\n残差のばらつきや正規性は良くなったが，クックの距離の問題が残っています。\n\n## 説明変数も変換する\n\nこんどは，説明変数も変換します。\n\n$$\nE(\\log(\\text{Species})) = b_0 + b_1\\log(\\text{Area})+b_2\\text{Nearest}+b_3\\log(\\text{Adjacent})\n$$\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ngala = gala |> mutate(logSpecies = log(Species), logArea = log(Area), logAdjacent = log(Adjacent))\nlogSF2 = lm(logSpecies~ logArea + Nearest + logAdjacent, data = gala)\nlogSF2 |> Anova(type = \"III\") |> print(signif.stars = F)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nAnova Table (Type III tests)\n\nResponse: logSpecies\n             Sum Sq Df  F value    Pr(>F)\n(Intercept) 151.442  1 239.3574 1.247e-14\nlogArea      52.429  1  82.8653 1.445e-09\nNearest       0.618  1   0.9764    0.3322\nlogAdjacent   0.159  1   0.2512    0.6204\nResiduals    16.450 26                   \n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nfgala = fortify(logSF2)\np1 = ggplot(fgala) + \n  geom_histogram(aes(x = .stdresid, y = ..density..)) +\n  stat_function(fun = dnorm, color = \"red\") +\n  labs(title = \"Histogram\", x = \"Standardized residual\", y = \"\") \np2 = ggplot(fgala) + \n  geom_qq(aes(sample = .stdresid)) +\n  geom_abline(color = \"red\") +\n  labs(title = \"QQ plot\", x = \"Theoretical Quantile\", y = \"Standardized residual\") \np3 = fgala |> \n  select(logSpecies, logArea, Nearest, logAdjacent, .stdresid) |> \n  pivot_longer(-.stdresid) |> \n  ggplot() + \n  geom_point(aes(x = value, y = .stdresid)) + \n  geom_hline(yintercept = 0, linetype = \"dashed\", color = \"red\") + \n  labs(title = \"Resid. vs. predictor\", x = \"Predictor value\", y = \"Standardized residual\") +\n  facet_wrap(vars(name), scales = \"free\")\np4 = fgala |> \n  select(.fitted, .stdresid) |> \n  ggplot() + \n  geom_point(aes(x = .fitted, y = .stdresid)) + \n  geom_hline(yintercept = 0, linetype = \"dashed\", color = \"red\")  +\n  labs(title = \"Resid. vs. fit\", x = \"Fitted value\", y = \"Standardized residual\")\np5 = fgala |> \n  select(.fitted, .stdresid) |> \n  ggplot() + \n  geom_point(aes(x = .fitted, y = sqrt(abs(.stdresid))))  +\n  labs(title = \"Scale - location\", x = \"Fitted value\", y = \"Standardized residual\")\ndof = summary(logSF) |> pluck(\"df\")\nthold = qf(0.5, dof[1], dof[2])\np6 = fgala |> \n  mutate(n = 1:n()) |> \n  mutate(above = ifelse(.cooksd > thold, T, F)) |> \n  ggplot() + \n  geom_point(aes(x = n, y = .cooksd, color = above)) + \n  geom_hline(yintercept = thold, color = \"red\", linetype = \"dashed\") +\n  labs(title = \"Cook's distance\", x = \"Index\", y = \"Cook's distance\")\n\np1 + p2 + p3 + p4 + p5 + p6\n```\n\n::: {.cell-output .cell-output-stderr}\n```\n`stat_bin()` using `bins = 30`. Pick better value with `binwidth`.\n```\n:::\n\n::: {.cell-output-display}\n![](glm_files/figure-html/unnamed-chunk-42-1.png){width=672}\n:::\n:::\n\n\n残差のばらつき，正規性，クックの距離の問題は解決できました。\n\n**結果**\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlogSF2 |> Anova(type = \"III\") |> print(signif.stars = F)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nAnova Table (Type III tests)\n\nResponse: logSpecies\n             Sum Sq Df  F value    Pr(>F)\n(Intercept) 151.442  1 239.3574 1.247e-14\nlogArea      52.429  1  82.8653 1.445e-09\nNearest       0.618  1   0.9764    0.3322\nlogAdjacent   0.159  1   0.2512    0.6204\nResiduals    16.450 26                   \n```\n:::\n:::\n\n\n帰無仮設の有意性検定によると，`logArea` と `Nearest` の効果は有意ですが，`logAdjacent` の効果は有意じゃない。\n\nところが，この結果まで導くには，5 種類のモデルを検証しました。$\\alpha_\\text{fwer}$ は\n$1 - (1-0.05)^5 = 0.2262$ ですので，$\\alpha_\\text{fwer}=0.05$ にしたければ，$\\alpha = 0.0102$ に設定しなければなりません。このとき，`logArea` 以外の要因の効果は有意ではありません。\n\n\n## 一般化線形モデル\n\n一般化線形モデル (GLM) は今までの線型モデルと同じように，線型結合した変数から成り立っています。\n\nさらに，\n\n* 正規分布を仮定した線型モデルのとき，予測残差は Residuals (残差) とよびましたが，GLMの予測残差は Deviance (尤離度・逸脱度・デビアンス) とよびます。\n* 正規分布以外の指数型分布族にぞくする分布も使えます。\n* 一般化線形モデルに 3 つの成分が存在します。\n    * 誤差構造または**ランダム成分 (random component)**\n    * **線型予測子 (linear predictor)**または系統成分(systematic component)\n    * 連結関数または**リンク関数 (link function)**\n\n## 指数型分布族・誤差項\n\n$$\nf(y|\\theta, \\phi) = \\exp\\left(\\frac {y\\theta - b(\\theta)} {a(\\phi)} + c(y, \\phi)\\right)\n$$\n\n$\\theta$ は**正準パラメータ (canonical parameter)**，$\\phi$ **はばらつきのパラメータ (dispersion parameter, 分散パラメータ)**，$a(\\cdot)$, $b(\\cdot)$, $c(\\cdot)$ は存知の関数です。さらに，平均値は $\\mu = E(y) = b'(\\theta)$，分散は $var(y) = a(\\phi) b''(\\theta)$ です。つまり，平均値は $\\theta$ の関数できまるが，分散は二つの関数の積です。$a(\\phi) = \\phi/w$ であれば，$v(y) = \\phi b''(\\theta)/w$ であり，分散関数とよびます。正規分布の場合，分散と平均値は独立しているのと，$\\phi=1$ なので，$var(y) = 1/w$ です。$w$ は存知の重みです。\n\n\n### 線形予測子または系統成分\n\n応答変数における予測子の影響は次のように書けます。\n\n$$\n\\eta = \\beta_0 + \\beta_1 x_1 + \\cdots + \\beta_n x_n \n$$\n\nこの線形予測子は一般線形モデルと同じ用に構築します。\n\n### 連結関数 (リンク関数)\n\n応答変数の期待値と予測子の関係はリンク関数を通して関係づけます。\n\n$$\ng(\\mu) = \\eta\n$$\n\nリンク関数は単調な微分可能な関数です。\n\n### 一般化線形モデルの推定方法\n\n\n一般化線形モデルのパラメータ推定には**最尤推定 (maximum likelihood estimation; maximum likelihood method; 最尤推定法)** を用います。\n\n$y_1, \\dots, y_n$ は $n$ 数の独立な確率変数とします。さらに，$y_i$ は同じパラメータの正規分布に従うとしたら，同時確立分布はつぎの通りです。\n\n$$\nP(y_1, \\dots, y_n | \\mu, \\sigma^2) = \\prod_{i=1}^{N} \\exp\\left(y_i\\frac{\\mu}{\\sigma^2} -\\frac{\\mu^2}{2\\sigma^2} - \\frac{1}{2}\\log(2\\pi\\sigma^2) -\\frac{y_i^2}{2\\sigma^2}\\right) = \\mathcal{L}(\\mu, \\sigma^2 | y_1, \\dots, y_n)\n$$\n\nここの $\\mathcal{L}(\\cdots)$ が**尤度関数 (log-likelihood function)**。両側の自然対数を求めれば，**対数尤度関数 (log-likelihood function)** に導きます。\n\n$$\n\\log(\\mathcal{L}(\\mu,\\sigma^2)) = - \\frac{n}{2}\\log(2\\pi\\sigma^2)-\\frac{1}{2\\sigma^2}\\sum_{i=1}^{N}(y_i - \\mu)^2\n$$\n\nこの対数尤度関数が最大または**負の対数尤度関数 (negative log-likelihood function)** が最小になるパラメータをさがすことが目的です。\n\n### 一般的な誤差項\n\n**連続型確率分布**\n\n* 正規分布\n* ガンマ分布\n* ベータ分布\n* 指数分布\n\n**離散型確率分布**\n\n* ポアソン分布\n* 二項分布\n* 負の二項分布\n* categorical 分布\n\n他にありますが，上記の分布が一般的につかわれています。\n \n\n## ガラパゴス諸島のデータのGLM解析例\n\nまず，帰無仮設の気無モデル（ヌルモデル）を組み立てます。\n\n$$\n\\begin{aligned}\n\\text{Species} &\\sim Pois(\\mu)\\\\\nE(\\text{Species}) &= \\mu \\\\\nE(\\text{Species}) &= \\exp(\\eta) \\\\\n\\eta &= b_0  \\\\\n\\end{aligned}\n$$\n\n$\\eta = b_0$ は切片のみのモデルです。\n\n### ポアソンGLM解析の出力\n\n  \n\n::: {.cell}\n\n```{.r .cell-code}\nH0_poisson = glm(Species ~ 1, data = gala, family = poisson(link = \"log\"))\nH0_poisson |> summary() |> print(signif.stars = F)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n\nCall:\nglm(formula = Species ~ 1, family = poisson(link = \"log\"), data = gala)\n\nDeviance Residuals: \n    Min       1Q   Median       3Q      Max  \n-12.307   -9.782   -5.200    1.142   27.351  \n\nCoefficients:\n            Estimate Std. Error z value Pr(>|z|)\n(Intercept)  4.44539    0.01978   224.8   <2e-16\n\n(Dispersion parameter for poisson family taken to be 1)\n\n    Null deviance: 3510.7  on 29  degrees of freedom\nResidual deviance: 3510.7  on 29  degrees of freedom\nAIC: 3673.6\n\nNumber of Fisher Scoring iterations: 6\n```\n:::\n:::\n\n\nパラメータの推定量の表の後に，(Dispersion parameter for poisson family taken to be 1) の記述があります。\nこれは，ポアソン分布のばらつきのパラメータ $(\\phi)$ を 1 に設定したと意味します。\nヌルモデルを当てはめたので，ヌル逸脱度 (Null Deviance) と残渣逸脱度 (Residual Deviance) は同じです。\n\n### 対立モデル\n\n次は対立モデルです。\n\n$$\n\\begin{aligned}\n\\text{Species} &\\sim Pois(\\mu)\\\\\nE(\\text{Species}) &= \\mu \\\\\nE(\\text{Species}) &= \\exp(\\eta) \\\\\n\\eta &= b_0 + b_1\\text{Area}+b_2\\text{Elevation}+b_3\\text{Nearest}+b_4\\text{Scruz}+b_5\\text{Adjacent}\\\\\n\\end{aligned}\n$$\n\n### 対立モデルの出力\n\n\n::: {.cell}\n\n```{.r .cell-code}\nHF_poisson = glm(Species ~ Area + Elevation + Nearest + Scruz + Adjacent, \n                 data = gala, family = poisson(link = \"log\"))\nHF_poisson |> summary() |> print(signif.stars = F)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n\nCall:\nglm(formula = Species ~ Area + Elevation + Nearest + Scruz + \n    Adjacent, family = poisson(link = \"log\"), data = gala)\n\nDeviance Residuals: \n    Min       1Q   Median       3Q      Max  \n-8.2752  -4.4966  -0.9443   1.9168  10.1849  \n\nCoefficients:\n              Estimate Std. Error z value Pr(>|z|)\n(Intercept)  3.155e+00  5.175e-02  60.963  < 2e-16\nArea        -5.799e-04  2.627e-05 -22.074  < 2e-16\nElevation    3.541e-03  8.741e-05  40.507  < 2e-16\nNearest      8.826e-03  1.821e-03   4.846 1.26e-06\nScruz       -5.709e-03  6.256e-04  -9.126  < 2e-16\nAdjacent    -6.630e-04  2.933e-05 -22.608  < 2e-16\n\n(Dispersion parameter for poisson family taken to be 1)\n\n    Null deviance: 3510.73  on 29  degrees of freedom\nResidual deviance:  716.85  on 24  degrees of freedom\nAIC: 889.68\n\nNumber of Fisher Scoring iterations: 5\n```\n:::\n:::\n\n\n最初に当てはめた線形モデルの結果と全く違います。\n\n## 尤度比検定とAICにおけるモデル比較 \n\n今までは，正規分布を仮定した解析手法をつかっていたので，比較はF検定で行いました。\nポアソンGLMののとき，尤度比検定で，帰無モデル（ヌルモデル）と対立モデルを比較します。\n\n\n::: {.cell}\n\n```{.r .cell-code}\nanova(H0_poisson, HF_poisson, test = \"LRT\")\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nAnalysis of Deviance Table\n\nModel 1: Species ~ 1\nModel 2: Species ~ Area + Elevation + Nearest + Scruz + Adjacent\n  Resid. Df Resid. Dev Df Deviance  Pr(>Chi)    \n1        29     3510.7                          \n2        24      716.8  5   2793.9 < 2.2e-16 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n```\n:::\n:::\n\n\n**AICでも比較できます。**\n\n\n::: {.cell}\n\n```{.r .cell-code}\nAIC(H0_poisson, HF_poisson)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n           df       AIC\nH0_poisson  1 3673.5596\nHF_poisson  6  889.6767\n```\n:::\n:::\n\n\n尤度比検定のとき，NHSTの検証になるので，帰無仮設を棄却することになります。\nAICのとき，モデル選択するので，AICの最も低いモデルを採択します。\n正規分布やガンマ分布などの他の分布をつかったときでも，尤度比検定やAICを用いてもいいです。\nもちろん，正規分布の場合，F検定でも問題はありません (このとき，`test = \"F\"`)。\n\n### ポアソン分布のときに必ず確認する値\n\nポアソン分布のGLMを実施したあと，**必ず確認しなければならい値は過分散 (over-dispersion)**です。\n過分散があるとき，パラメータの標準誤差，信頼区間，モデルの予測値は誤っています。\n過分散をパラメータとして推定するモデル（正規分布やガンマ分布など）の場合は，過分散の推定を無視できます。\nこの点については <https://bbolker.github.io/mixedmodels-misc/glmmFAQ.html> を参考にしてください。\n\n\n::: {.cell}\n\n```{.r .cell-code}\noverdisp_fun = function(model) {\n    rdf = df.residual(model)\n    rp = residuals(model,type=\"pearson\")\n    Pearson.chisq = sum(rp^2)\n    prat = Pearson.chisq/rdf\n    pval = pchisq(Pearson.chisq, df=rdf, lower.tail=FALSE)\n    mu = mean(predict(model, type = \"response\"))\n    c(mu=mu, chisq=Pearson.chisq,ratio=prat,rdf=rdf,p=pval)\n}\noverdisp_fun(HF_poisson)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n           mu         chisq         ratio           rdf             p \n 8.523333e+01  7.619792e+02  3.174914e+01  2.400000e+01 2.187190e-145 \n```\n:::\n:::\n\n\n感覚的に考えると，モデル結果の Residual Deviance の値が degrees of freedom の値と同じであれば，過分散は存在しません。\nただし，どの手法をつかっても，平均値は 5 以上じゃなければなりません。\n上記のP値はとても小さいので，過分散が存在すると考えられます。\nまたは，Residual Deviance (761.98) は自由度 (24) より大きいので，検定をしなくても過分散の問題は明らかです\n過分散はデータがポアソン分布に従わないときとモデル変数が不十分なときに起こります。過小分散も存在しますが，過分散ほどの問題ではありません。\n\n### モデルの改良\n\n\n過分散の問題があったので，診断図を確認するよりも，他のモデルを当てはめてみます。\nここでは説明変数のログ変換したモデルを解析します。\n\n\n::: {.cell}\n\n```{.r .cell-code}\nH2_poisson = glm(Species ~ logArea + Nearest + logAdjacent, \n                 data = gala, family = poisson(link = \"log\"))\nH2_poisson |> summary() |> print(signif.stars = F)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n\nCall:\nglm(formula = Species ~ logArea + Nearest + logAdjacent, family = poisson(link = \"log\"), \n    data = gala)\n\nDeviance Residuals: \n    Min       1Q   Median       3Q      Max  \n-5.6281  -3.4817  -0.3344   2.7419   8.2056  \n\nCoefficients:\n             Estimate Std. Error z value Pr(>|z|)\n(Intercept)  3.361898   0.046784  71.860  < 2e-16\nlogArea      0.371771   0.007961  46.698  < 2e-16\nNearest     -0.006244   0.001312  -4.759 1.94e-06\nlogAdjacent -0.097529   0.006106 -15.974  < 2e-16\n\n(Dispersion parameter for poisson family taken to be 1)\n\n    Null deviance: 3510.73  on 29  degrees of freedom\nResidual deviance:  371.78  on 26  degrees of freedom\nAIC: 540.61\n\nNumber of Fisher Scoring iterations: 5\n```\n:::\n:::\n\n\nResidual deviance と degrees of freedom を確認すると，$371.78\\; /\\; 26 > 1$ なので，過分散が残っています。\nガラパゴス諸島の種数のデータに対して，どのように変換を変換しても，過分散は $>1$ です。\n\n### 過分散をパラメータとして扱う\n\n何をしても過分散が残るとき，過分散をパラメータ化することができます。\nポアソン分布で説明できなかった分散を負の二項分布で説明できるかもしれません。\n\n**【重要】**`MASS` パッケージの`select()` 関数は `tidyverse` の `select()` 関数と同じ名前なので、\nあとに読み込んだパッケージの関すが優先されます。\nつまり、`MASS` パッケージは `tidyverse` の先に読み込みましょう。\nあるいは、不要になったらディタッチ (detach) しましょう。\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndetach(name = package:MASS)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nH2_negbinom = MASS::glm.nb(Species ~ logArea + Nearest + logAdjacent, data = gala, link = \"log\")\nH2_negbinom |> summary() |> print(signif.stars = F)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n\nCall:\nMASS::glm.nb(formula = Species ~ logArea + Nearest + logAdjacent, \n    data = gala, link = \"log\", init.theta = 2.83714993)\n\nDeviance Residuals: \n    Min       1Q   Median       3Q      Max  \n-2.2174  -0.9672  -0.3006   0.5165   2.0350  \n\nCoefficients:\n             Estimate Std. Error z value Pr(>|z|)\n(Intercept)  3.369739   0.157235  21.431   <2e-16\nlogArea      0.364309   0.035028  10.400   <2e-16\nNearest     -0.012389   0.008211  -1.509    0.131\nlogAdjacent -0.034399   0.036005  -0.955    0.339\n\n(Dispersion parameter for Negative Binomial(2.8371) family taken to be 1)\n\n    Null deviance: 144.45  on 29  degrees of freedom\nResidual deviance:  32.82  on 26  degrees of freedom\nAIC: 284.88\n\nNumber of Fisher Scoring iterations: 1\n\n              Theta:  2.837 \n          Std. Err.:  0.830 \n\n 2 x log-likelihood:  -274.884 \n```\n:::\n:::\n\n\n誤差項の分布は負の二項分布にしたので，分散は $Variance = \\mu + \\frac{\\mu}{\\theta}$ として推定されます。\nこのモデルの$\\theta$ は 2.8371 です。\nこのモデルの解析を進めたいので，次は診断図の確認です。\n\n### 負の二項分布GLMの診断図\n\n診断図はよくつくるので、診断図用の関数を定義します。\n\n### 診断図関数：残差のヒストグラム\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# 残差のヒストグラム\ngg_resid_hist = function(fitted.model) {\n  require(tidyvers)\n  require(statmod)\n  data = fortify(fitted.model) |> as_tibble()\n  if(class(fitted.model)[1] != \"lm\") {\n    data = data |> mutate(qresid = statmod::qresiduals(fitted.model))\n    data = data |> mutate(residual = qresid)\n    xlabel = \"Randomized Quantile Residuals\"\n  } else {\n    data = data |> mutate(residual = .resid)\n    xlabel = \"Standardized Residuals\"\n  }\n  ggplot(data) +\n    geom_histogram(aes(x = residual)) +\n    labs(x = xlabel) + ggtitle(\"Histogram of Residuals\")\n}\n```\n:::\n\n\n### 診断図関数：残差のQQプロット\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# 残差のQQプロット\ngg_qq = function(fitted.model) {\n  require(tidyvers)\n  require(statmod)\n  data = fortify(fitted.model) |> as_tibble()\n   if(class(fitted.model)[1] != \"lm\") {\n    data = data |> mutate(qresid = statmod::qresiduals(fitted.model))\n    data = data |> mutate(residual = qresid)\n    ylabel = \"Randomized Quantile Residuals\"\n  } else {\n    data = data |> mutate(residual = .stdresid)\n    ylabel = \"Standardized Residuals\"\n  }\n  ggplot(data) +\n    geom_qq(aes(sample =residual)) +\n    geom_abline(color = \"red\") +\n    labs(x = \"Theoretical Quantile\", y = ylabel) +\n    ggtitle(\"Normal-QQ Plot\")\n}\n```\n:::\n\n\n### 診断図関数：変数に対する残差のばらつき\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# 変数に対する残差のプロット\ngg_resX = function(fitted.model, ncol=NULL, ...) {\n  require(tidyvers)\n  require(statmod)\n  residlab = function(string) {\n    sprintf(\"Residuals vs. %s\", string)\n  }\n  data = fortify(fitted.model) |> as_tibble()\n  varnames = as.character(formula(fitted.model)) |> pluck(3)\n  varnames = str_split(varnames, \" \\\\+ \") |> pluck(1)\n  if(class(fitted.model)[1] != \"lm\") {\n    data = data |> mutate(qresid = statmod::qresiduals(fitted.model))\n    data = data |> mutate(residual = qresid)\n    ylabel = \"Randomized Quantile Residuals\"\n  } else {\n    data = data |> mutate(residual = .resid)\n    ylabel = \"Standardized Residuals\"\n  }\n  varnames = names(data)[names(data) %in% varnames]\n  data = data |> dplyr::select(varnames, residual) |> gather(var, value, varnames)\n  ggplot(data) + \n    geom_point(aes(x = value, y = residual)) +\n    geom_hline(yintercept=0, color = \"red\", linetype = \"dashed\") +\n    labs(x=\"Value\", y = ylabel) +\n    facet_wrap(\"var\", labeller=labeller(var=residlab), scales = \"free_x\",\n               ncol = ncol)\n}\n```\n:::\n\n\n### 診断図関数：期待値に対する残差のばらつき\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# 期待値に対する残差のプロット\ngg_resfitted = function(fitted.model) {\n  require(tidyvers)\n  require(statmod)\n  data = fortify(fitted.model) |> as_tibble()\n  if(class(fitted.model)[1] != \"lm\") {\n    data = data |> mutate(qresid = statmod::qresiduals(fitted.model))\n    data = data |> mutate(residual = qresid)\n    ylabel = \"Randomized Quantile Residuals\"\n  } else {\n    data = data |> mutate(residual = .resid)\n    ylabel = \"Standardized Residuals\"\n  }\n  ggplot(data) + \n    geom_point(aes(x = .fitted, y = residual)) +\n    geom_hline(yintercept=0, color = \"red\", linetype = \"dashed\") +\n    labs(x=\"Fitted Values\", y = ylabel) +\n    ggtitle(\"Residuals vs. Fitted Values\")\n}\n```\n:::\n\n\n### 診断図関数：スケール・ロケーションプロット\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# スケール・ロケーションプロット\ngg_scalelocation = function(fitted.model) {\n  require(tidyvers)\n  require(statmod)\n  data = fortify(fitted.model) |> as_tibble()\n  if(class(fitted.model)[1] != \"lm\") {\n    data = data |> mutate(qresid = statmod::qresiduals(fitted.model))\n    data = data |> mutate(residual = qresid)\n    ylabel = expression(sqrt(\"|RQR|\"))\n  } else {\n    data = data |> mutate(residual = .resid)\n    ylabel = expression(sqrt(\"|Standardized Residuals|\"))\n  }\n  ggplot(data) + \n    geom_point(aes(x = .fitted, y = sqrt(abs(residual)))) +\n    geom_smooth(aes(x = .fitted, y = sqrt(abs(residual))), \n                se = F, color = \"red\", linetype = \"dashed\") +\n    labs(x=\"Fitted Values\", y = ylabel) +\n    ggtitle(\"Scale - Location Plot\")\n}\n```\n:::\n\n\n### 診断図関数：クックの距離\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# クックの距離\ngg_cooksd = function(fitted.model) {\n  require(tidyvers)\n  require(statmod)\n  data = fortify(fitted.model) |> as_tibble()\n  data = data |> mutate(n = seq_along(.cooksd))\n  dof = summary(fitted.model) |> pluck(\"df\")\n  thold = qf(0.5, dof[1], dof[2])\n  data2 = data |> mutate(above = ifelse(.cooksd > thold, T, F)) |> filter(above)\n  ggplot(data) + \n    geom_point(aes(x = n, y = .cooksd)) +\n    geom_segment(aes(x = n, y = 0, xend = n, yend = .cooksd)) +\n    geom_hline(yintercept=thold, color = \"red\", linetype = \"dashed\") +\n    geom_text(aes(x = n, y = .cooksd, label = n), data = data2, nudge_x=3, color = \"red\") +\n    labs(x=\"Sample\", y = \"Cook's Distance\") +\n    ggtitle(\"Cook's Distance Plot\")\n}\n```\n:::\n\n\n\n\n残差の確認は線形モデルと同じようにしますが，[解析に使う残差は ダン=スミス残差 (Dunn-Smyth Residuals; randomized quantile residuals) です](http://www.statsci.org/smyth/pubs/residual.html)。\nとくに，ポアソンGLMと疑似ポアソンGLMのダン=スミス残差を求めます。\nダン=スミス残差は残差の累積分布関数を用いて残差のランダム化を行います。\nランダム化した残差は正規分布に近似するので，QQプロットで使用した分布のよさを評価できます。\n]ランダム化残差が直線に沿っていたら，分布に問題がないと示唆します。\n左側はポアソン分布GLMのランダム化残差のQQプロットです。右側は負の二項分布GLMのランダム化残差のQQプロットです。\n\n\n::: {.cell}\n\n```{.r .cell-code}\np1 = gg_qq(H2_poisson)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nLoading required package: tidyvers\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning in library(package, lib.loc = lib.loc, character.only = TRUE,\nlogical.return = TRUE, : there is no package called 'tidyvers'\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nLoading required package: statmod\n```\n:::\n\n```{.r .cell-code}\np2 = gg_qq(H2_negbinom)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nLoading required package: tidyvers\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning in library(package, lib.loc = lib.loc, character.only = TRUE,\nlogical.return = TRUE, : there is no package called 'tidyvers'\n```\n:::\n\n```{.r .cell-code}\np1 | p2\n```\n\n::: {.cell-output-display}\n![](glm_files/figure-html/unnamed-chunk-58-1.png){width=672}\n:::\n:::\n\n\n### η に対するランダム化残差のばらつき\n\n\nランダム化残差と $\\eta$ の間に明確な関係はありません。\n$\\sqrt{\\left(|\\text{Randomized Quantile Residuals}~\\right)}$ は若干山形な形をしています。\nところが，期待値の両端のデータが点線を引っ張っているように見えるので，\n明確ではない。\n\n\n::: {.cell}\n\n```{.r .cell-code}\np1 = gg_resfitted(H2_negbinom)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nLoading required package: tidyvers\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning in library(package, lib.loc = lib.loc, character.only = TRUE,\nlogical.return = TRUE, : there is no package called 'tidyvers'\n```\n:::\n\n```{.r .cell-code}\np2 = gg_scalelocation(H2_negbinom)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nLoading required package: tidyvers\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning in library(package, lib.loc = lib.loc, character.only = TRUE,\nlogical.return = TRUE, : there is no package called 'tidyvers'\n```\n:::\n\n```{.r .cell-code}\np1 | p2\n```\n\n::: {.cell-output .cell-output-stderr}\n```\n`geom_smooth()` using method = 'loess' and formula 'y ~ x'\n```\n:::\n\n::: {.cell-output-display}\n![](glm_files/figure-html/unnamed-chunk-59-1.png){width=672}\n:::\n:::\n\n\n全てクックの距離は$P(F_{(n, n-p)}=0.5)$ より低いので，モデルを引っ張る点はありません。\n\n\n::: {.cell}\n\n```{.r .cell-code}\ngg_cooksd(H2_negbinom)\n```\n:::\n\n\n## 結果\n\n診断図と過分散の確認から，次のモデルにたどり着きました。\n\n$$\n\\begin{aligned}\n\\text{Species} &\\sim NegBin(\\mu)\\\\\nE(\\text{Species}) &= \\mu \\\\\nE(\\text{Species}) &= \\exp(\\eta) \\\\\nVariance &= \\mu + \\frac{\\mu}{\\theta} \\\\\n\\eta &= b_0 + b_1\\log(\\text{Area})+b_3\\text{Nearest}+b_5\\log(\\text{Adjacent})\\\\\n\\end{aligned}\n$$\n\n\n::: {.cell}\n\n```{.r .cell-code}\nAIC(H2_poisson, H2_negbinom)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n            df      AIC\nH2_poisson   4 540.6134\nH2_negbinom  5 284.8838\n```\n:::\n:::\n\n\nポアソン分布GLMのAICが高いので，負の二項分布GLMを採択します。\n\nCross Validated の参考資料 (Why is the quasi-Poisson in GLM not treated as a special case of negative binomial?)[https://stats.stackexchange.com/questions/157575/why-is-the-quasi-poisson-in-glm-not-treated-as-a-special-case-of-negative-binomi]\n\n### 負の二項分布の結果（係数表）\n\n\n係数表だけ出力しました。\n\n\n::: {.cell}\n\n```{.r .cell-code}\nH2_negbinom |> summary() |> coefficients() |> print(digits = 3)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n            Estimate Std. Error z value  Pr(>|z|)\n(Intercept)   3.3697    0.15723  21.431 6.83e-102\nlogArea       0.3643    0.03503  10.400  2.47e-25\nNearest      -0.0124    0.00821  -1.509  1.31e-01\nlogAdjacent  -0.0344    0.03600  -0.955  3.39e-01\n```\n:::\n\n```{.r .cell-code}\n# H2_negbinom |> summary() # 全情報の出力\n```\n:::\n\n\n切片と `logArea` の効果ははっきりしています (P < 0.0001)。ところが，`Nearest` と `logAdjacent` のP値は $>0.05$ でした。\nさらに，変数をへらしてもAICは大きく変わりません。\n\n### AIC\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nH2_negbinom2 = MASS::glm.nb(Species ~ logArea + Nearest , data = gala, link = \"log\")\nH2_negbinom3 = MASS::glm.nb(Species ~ logArea +  logAdjacent, data = gala, link = \"log\")\nH2_negbinom4 = MASS::glm.nb(Species ~ logArea , data = gala, link = \"log\")\nAIC(H2_negbinom, H2_negbinom2, H2_negbinom3, H2_negbinom4) |> as_tibble(rownames = \"model\") |> arrange(AIC)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 4 × 3\n  model           df   AIC\n  <chr>        <dbl> <dbl>\n1 H2_negbinom2     4  284.\n2 H2_negbinom4     3  284.\n3 H2_negbinom      5  285.\n4 H2_negbinom3     4  285.\n```\n:::\n:::\n\n\n最も小さいAICは `H2_negbinom2` になりましたがAICがの差が 0 ~ 7 の範囲に入るので，どのモデルでもいいです。\nこのとき，尤度比検定もした方がいい。\n\n\n### 尤度比検定\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nanova(H2_negbinom, H2_negbinom2, H2_negbinom3, H2_negbinom4, test = \"LRT\")\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning in anova.negbin(H2_negbinom, H2_negbinom2, H2_negbinom3, H2_negbinom4, :\nonly Chi-squared LR tests are implemented\n```\n:::\n\n::: {.cell-output .cell-output-stdout}\n```\nLikelihood ratio tests of Negative Binomial Models\n\nResponse: Species\n                            Model    theta Resid. df    2 x log-lik.   Test\n1                         logArea 2.533343        28       -277.7721       \n2               logArea + Nearest 2.730433        27       -275.7711 1 vs 2\n3           logArea + logAdjacent 2.619569        27       -276.9859 2 vs 3\n4 logArea + Nearest + logAdjacent 2.837150        26       -274.8838 3 vs 4\n     df  LR stat.   Pr(Chi)\n1                          \n2     1  2.000994 0.1571961\n3     0 -1.214826 1.0000000\n4     1  2.102117 0.1470954\n```\n:::\n:::\n\n自由度の高い順からペア毎の尤度比検定を行っています。$E(\\text{Species})\\sim b_0 + b_1\\text{logArea}$ のモデルでいいかもしれないです。\n\n### モデル診断図\n\n\n::: {.cell}\n\n```{.r .cell-code}\np1 = gg_qq(H2_negbinom4)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nLoading required package: tidyvers\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning in library(package, lib.loc = lib.loc, character.only = TRUE,\nlogical.return = TRUE, : there is no package called 'tidyvers'\n```\n:::\n\n```{.r .cell-code}\np2 = gg_resX(H2_negbinom4, ncol = 2)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nLoading required package: tidyvers\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning in library(package, lib.loc = lib.loc, character.only = TRUE,\nlogical.return = TRUE, : there is no package called 'tidyvers'\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nNote: Using an external vector in selections is ambiguous.\nℹ Use `all_of(varnames)` instead of `varnames` to silence this message.\nℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.\nThis message is displayed once per session.\n```\n:::\n\n```{.r .cell-code}\np3 = gg_resfitted(H2_negbinom4)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nLoading required package: tidyvers\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning in library(package, lib.loc = lib.loc, character.only = TRUE,\nlogical.return = TRUE, : there is no package called 'tidyvers'\n```\n:::\n\n```{.r .cell-code}\np4 = gg_cooksd(H2_negbinom4)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nLoading required package: tidyvers\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning in library(package, lib.loc = lib.loc, character.only = TRUE,\nlogical.return = TRUE, : there is no package called 'tidyvers'\n```\n:::\n\n```{.r .cell-code}\np1 + p2 + p3 + p4\n```\n\n::: {.cell-output-display}\n![](glm_files/figure-html/unnamed-chunk-65-1.png){width=672}\n:::\n:::\n\n\nモデル診断図を確認したら，残差の問題はないですので，$E(\\text{Species})\\sim b_0 + b_1\\text{logArea}$ のモデルを採択することになりました。\n\n### 採択したモデル\n\n\n::: {.cell}\n\n```{.r .cell-code}\nH2_negbinom4 |> summary()\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n\nCall:\nMASS::glm.nb(formula = Species ~ logArea, data = gala, link = \"log\", \n    init.theta = 2.533342912)\n\nDeviance Residuals: \n    Min       1Q   Median       3Q      Max  \n-1.9737  -0.9216  -0.2155   0.5056   1.8969  \n\nCoefficients:\n            Estimate Std. Error z value Pr(>|z|)    \n(Intercept)  3.22480    0.13669  23.592   <2e-16 ***\nlogArea      0.34989    0.03543   9.877   <2e-16 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\n(Dispersion parameter for Negative Binomial(2.5333) family taken to be 1)\n\n    Null deviance: 130.161  on 29  degrees of freedom\nResidual deviance:  32.604  on 28  degrees of freedom\nAIC: 283.77\n\nNumber of Fisher Scoring iterations: 1\n\n              Theta:  2.533 \n          Std. Err.:  0.719 \n\n 2 x log-likelihood:  -277.772 \n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nndata = gala |> expand(logArea = seq(min(logArea), max(logArea), length = 21)) \nndata = bind_cols(ndata, predict(H2_negbinom4, newdata = ndata, type = \"link\", se = T) |> as_tibble())\nndata = ndata |> \n  mutate(expect = exp(fit),\n         lower = exp(fit - se.fit),\n         upper = exp(fit + se.fit))\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ngala |> \n  ggplot(aes(x = logArea)) +\n  geom_ribbon(aes(ymin = lower, ymax = upper), data = ndata, alpha = 0.5) +\n  geom_point(aes(y = Species)) +\n  geom_line(aes(y = expect), data = ndata)\n```\n\n::: {.cell-output-display}\n![](glm_files/figure-html/unnamed-chunk-68-1.png){width=672}\n:::\n:::\n",
    "supporting": [
      "glm_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}