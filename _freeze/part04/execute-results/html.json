{
  "hash": "449c55688e9091b9635ef672d5fe34f2",
  "result": {
    "markdown": "---\ntitle: \"データの操作\"\n---\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(tidyverse)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\n── Attaching packages ─────────────────────────────────────── tidyverse 1.3.2 ──\n✔ ggplot2 3.3.6      ✔ purrr   0.3.4 \n✔ tibble  3.1.8      ✔ dplyr   1.0.10\n✔ tidyr   1.2.0      ✔ stringr 1.4.0 \n✔ readr   2.1.2      ✔ forcats 0.5.1 \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\n```\n:::\n:::\n\n\n\n## 理想的なデータ構造\n\n* 1 行 = 1 観測値\n* 1 列 = 1 変数\n\n## データ加工・操作用関数\n\n**データの結合 (mutating join)**\n\n`x`, `y`, `by` は関数の引数です。`by` で指定したキー（変数名）が一致するように行を合わせることができる。\n\n* `full_join(x, y, by)`：全ての `x` と `y` 行と列を結合する。\n* `inner_join(x, y, by)`：`x` と `y` で共通する行と列を結合する。\n* `left_join(x, y, by)`：左側（）第 1 引数のtibble に `y` の変数を追加する。\n* `right_join(x, y, by)`：右側（）第 2 引数のtibble に `x` の変数を追加する。\n\n\n**データの結合 (join)**\n\n* `bind_cols()`：渡したtibbleを横に結合する（行数が異なったらエラーが発生する）。\n* `bind_rows()`：渡した tibble を立てに結合する（一致する変数名を合わせてくれます）。\n\n\n## mutating join のつかいかた\n\n\n::: {.cell}\n\n```{.r .cell-code}\nX = tibble(x = c(\"A\", \"B\", \"C\", \"G\"), y = c(NA, rnorm(3, mean = 5)))\nY = tibble(x = c(\"A\", \"C\", \"D\", \"E\"), z = c(rpois(3, lambda = 5), NA))\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nX\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 4 × 2\n  x         y\n  <chr> <dbl>\n1 A     NA   \n2 B      5.21\n3 C      6.81\n4 G      6.13\n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nY\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 4 × 2\n  x         z\n  <chr> <int>\n1 A         9\n2 C         8\n3 D         5\n4 E        NA\n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nfull_join(X,Y, by = \"x\")\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 6 × 3\n  x         y     z\n  <chr> <dbl> <int>\n1 A     NA        9\n2 B      5.21    NA\n3 C      6.81     8\n4 G      6.13    NA\n5 D     NA        5\n6 E     NA       NA\n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ninner_join(X, Y, by = \"x\")\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 2 × 3\n  x         y     z\n  <chr> <dbl> <int>\n1 A     NA        9\n2 C      6.81     8\n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nleft_join(X, Y, by = \"x\")\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 4 × 3\n  x         y     z\n  <chr> <dbl> <int>\n1 A     NA        9\n2 B      5.21    NA\n3 C      6.81     8\n4 G      6.13    NA\n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nright_join(X, Y, by = \"x\")\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 4 × 3\n  x         y     z\n  <chr> <dbl> <int>\n1 A     NA        9\n2 C      6.81     8\n3 D     NA        5\n4 E     NA       NA\n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nbind_rows(X, Y)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 8 × 3\n  x         y     z\n  <chr> <dbl> <int>\n1 A     NA       NA\n2 B      5.21    NA\n3 C      6.81    NA\n4 G      6.13    NA\n5 A     NA        9\n6 C     NA        8\n7 D     NA        5\n8 E     NA       NA\n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nbind_rows(\"X\" = X, \"Y\" = Y, .id = \"origin\")\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 8 × 4\n  origin x         y     z\n  <chr>  <chr> <dbl> <int>\n1 X      A     NA       NA\n2 X      B      5.21    NA\n3 X      C      6.81    NA\n4 X      G      6.13    NA\n5 Y      A     NA        9\n6 Y      C     NA        8\n7 Y      D     NA        5\n8 Y      E     NA       NA\n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nbind_cols(X, Y)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nNew names:\n• `x` -> `x...1`\n• `x` -> `x...3`\n```\n:::\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 4 × 4\n  x...1     y x...3     z\n  <chr> <dbl> <chr> <int>\n1 A     NA    A         9\n2 B      5.21 C         8\n3 C      6.81 D         5\n4 G      6.13 E        NA\n```\n:::\n:::\n\n\n## 行と列の加工・操作用関数\n\n**列における操作**\n\n* `mutate()`：既存の変数の書き換えや変数の追加する\n* `select()`：既存の変数を選らぶ\n* `rename()`：既存の変数の名前を変える\n* `pull()`：既存の変数をリストとして抽出する\n* `relocate()``：指定した列の位置を変える\n\n**行における操作**\n\n* `filter()`：条件を満たした行を返す\n* `distinct()`：指定した変数から重複している行を外す\n* `slice()`：指定した行インデックスを返す\n* `arrange()`：指定した列の昇順で行を並べ替える\n\n## 列の加工\n\n\n::: {.cell}\n\n```{.r .cell-code}\niris |> as_tibble() |> mutate(P2 = Petal.Length^2)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 150 × 6\n   Sepal.Length Sepal.Width Petal.Length Petal.Width Species    P2\n          <dbl>       <dbl>        <dbl>       <dbl> <fct>   <dbl>\n 1          5.1         3.5          1.4         0.2 setosa   1.96\n 2          4.9         3            1.4         0.2 setosa   1.96\n 3          4.7         3.2          1.3         0.2 setosa   1.69\n 4          4.6         3.1          1.5         0.2 setosa   2.25\n 5          5           3.6          1.4         0.2 setosa   1.96\n 6          5.4         3.9          1.7         0.4 setosa   2.89\n 7          4.6         3.4          1.4         0.3 setosa   1.96\n 8          5           3.4          1.5         0.2 setosa   2.25\n 9          4.4         2.9          1.4         0.2 setosa   1.96\n10          4.9         3.1          1.5         0.1 setosa   2.25\n# … with 140 more rows\n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\niris |> as_tibble() |> select(Species, Petal.Length)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 150 × 2\n   Species Petal.Length\n   <fct>          <dbl>\n 1 setosa           1.4\n 2 setosa           1.4\n 3 setosa           1.3\n 4 setosa           1.5\n 5 setosa           1.4\n 6 setosa           1.7\n 7 setosa           1.4\n 8 setosa           1.5\n 9 setosa           1.4\n10 setosa           1.5\n# … with 140 more rows\n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\niris |> as_tibble() |> select(matches(\"Length\"))\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 150 × 2\n   Sepal.Length Petal.Length\n          <dbl>        <dbl>\n 1          5.1          1.4\n 2          4.9          1.4\n 3          4.7          1.3\n 4          4.6          1.5\n 5          5            1.4\n 6          5.4          1.7\n 7          4.6          1.4\n 8          5            1.5\n 9          4.4          1.4\n10          4.9          1.5\n# … with 140 more rows\n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\niris |> as_tibble() |> rename(PL = Petal.Length)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 150 × 5\n   Sepal.Length Sepal.Width    PL Petal.Width Species\n          <dbl>       <dbl> <dbl>       <dbl> <fct>  \n 1          5.1         3.5   1.4         0.2 setosa \n 2          4.9         3     1.4         0.2 setosa \n 3          4.7         3.2   1.3         0.2 setosa \n 4          4.6         3.1   1.5         0.2 setosa \n 5          5           3.6   1.4         0.2 setosa \n 6          5.4         3.9   1.7         0.4 setosa \n 7          4.6         3.4   1.4         0.3 setosa \n 8          5           3.4   1.5         0.2 setosa \n 9          4.4         2.9   1.4         0.2 setosa \n10          4.9         3.1   1.5         0.1 setosa \n# … with 140 more rows\n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\niris |> as_tibble() |> \n  rename_with(~str_replace_all(.x, \"[(a-z.)]\", \"\"), .cols = matches(\"(Pet)|(Sep)\"))\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 150 × 5\n      SL    SW    PL    PW Species\n   <dbl> <dbl> <dbl> <dbl> <fct>  \n 1   5.1   3.5   1.4   0.2 setosa \n 2   4.9   3     1.4   0.2 setosa \n 3   4.7   3.2   1.3   0.2 setosa \n 4   4.6   3.1   1.5   0.2 setosa \n 5   5     3.6   1.4   0.2 setosa \n 6   5.4   3.9   1.7   0.4 setosa \n 7   4.6   3.4   1.4   0.3 setosa \n 8   5     3.4   1.5   0.2 setosa \n 9   4.4   2.9   1.4   0.2 setosa \n10   4.9   3.1   1.5   0.1 setosa \n# … with 140 more rows\n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\niris |> as_tibble() |> pull(Species)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n  [1] setosa     setosa     setosa     setosa     setosa     setosa    \n  [7] setosa     setosa     setosa     setosa     setosa     setosa    \n [13] setosa     setosa     setosa     setosa     setosa     setosa    \n [19] setosa     setosa     setosa     setosa     setosa     setosa    \n [25] setosa     setosa     setosa     setosa     setosa     setosa    \n [31] setosa     setosa     setosa     setosa     setosa     setosa    \n [37] setosa     setosa     setosa     setosa     setosa     setosa    \n [43] setosa     setosa     setosa     setosa     setosa     setosa    \n [49] setosa     setosa     versicolor versicolor versicolor versicolor\n [55] versicolor versicolor versicolor versicolor versicolor versicolor\n [61] versicolor versicolor versicolor versicolor versicolor versicolor\n [67] versicolor versicolor versicolor versicolor versicolor versicolor\n [73] versicolor versicolor versicolor versicolor versicolor versicolor\n [79] versicolor versicolor versicolor versicolor versicolor versicolor\n [85] versicolor versicolor versicolor versicolor versicolor versicolor\n [91] versicolor versicolor versicolor versicolor versicolor versicolor\n [97] versicolor versicolor versicolor versicolor virginica  virginica \n[103] virginica  virginica  virginica  virginica  virginica  virginica \n[109] virginica  virginica  virginica  virginica  virginica  virginica \n[115] virginica  virginica  virginica  virginica  virginica  virginica \n[121] virginica  virginica  virginica  virginica  virginica  virginica \n[127] virginica  virginica  virginica  virginica  virginica  virginica \n[133] virginica  virginica  virginica  virginica  virginica  virginica \n[139] virginica  virginica  virginica  virginica  virginica  virginica \n[145] virginica  virginica  virginica  virginica  virginica  virginica \nLevels: setosa versicolor virginica\n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\niris |> as_tibble() |> relocate(Species, .before = \"Sepal.Length\")\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 150 × 5\n   Species Sepal.Length Sepal.Width Petal.Length Petal.Width\n   <fct>          <dbl>       <dbl>        <dbl>       <dbl>\n 1 setosa           5.1         3.5          1.4         0.2\n 2 setosa           4.9         3            1.4         0.2\n 3 setosa           4.7         3.2          1.3         0.2\n 4 setosa           4.6         3.1          1.5         0.2\n 5 setosa           5           3.6          1.4         0.2\n 6 setosa           5.4         3.9          1.7         0.4\n 7 setosa           4.6         3.4          1.4         0.3\n 8 setosa           5           3.4          1.5         0.2\n 9 setosa           4.4         2.9          1.4         0.2\n10 setosa           4.9         3.1          1.5         0.1\n# … with 140 more rows\n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\niris |> as_tibble() |> relocate(Species, matches(\"Length\"), .before = \"Sepal.Length\")\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 150 × 5\n   Species Sepal.Length Petal.Length Sepal.Width Petal.Width\n   <fct>          <dbl>        <dbl>       <dbl>       <dbl>\n 1 setosa           5.1          1.4         3.5         0.2\n 2 setosa           4.9          1.4         3           0.2\n 3 setosa           4.7          1.3         3.2         0.2\n 4 setosa           4.6          1.5         3.1         0.2\n 5 setosa           5            1.4         3.6         0.2\n 6 setosa           5.4          1.7         3.9         0.4\n 7 setosa           4.6          1.4         3.4         0.3\n 8 setosa           5            1.5         3.4         0.2\n 9 setosa           4.4          1.4         2.9         0.2\n10 setosa           4.9          1.5         3.1         0.1\n# … with 140 more rows\n```\n:::\n:::\n\n\n\n## 行の加工\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\niris |> as_tibble() |> filter(str_detect(Species, \"versicolor\"))\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 50 × 5\n   Sepal.Length Sepal.Width Petal.Length Petal.Width Species   \n          <dbl>       <dbl>        <dbl>       <dbl> <fct>     \n 1          7           3.2          4.7         1.4 versicolor\n 2          6.4         3.2          4.5         1.5 versicolor\n 3          6.9         3.1          4.9         1.5 versicolor\n 4          5.5         2.3          4           1.3 versicolor\n 5          6.5         2.8          4.6         1.5 versicolor\n 6          5.7         2.8          4.5         1.3 versicolor\n 7          6.3         3.3          4.7         1.6 versicolor\n 8          4.9         2.4          3.3         1   versicolor\n 9          6.6         2.9          4.6         1.3 versicolor\n10          5.2         2.7          3.9         1.4 versicolor\n# … with 40 more rows\n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\niris |> as_tibble() |> filter(Petal.Length > 6 & Sepal.Length > 7.5)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 6 × 5\n  Sepal.Length Sepal.Width Petal.Length Petal.Width Species  \n         <dbl>       <dbl>        <dbl>       <dbl> <fct>    \n1          7.6         3            6.6         2.1 virginica\n2          7.7         3.8          6.7         2.2 virginica\n3          7.7         2.6          6.9         2.3 virginica\n4          7.7         2.8          6.7         2   virginica\n5          7.9         3.8          6.4         2   virginica\n6          7.7         3            6.1         2.3 virginica\n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\niris |> as_tibble() |> distinct(Species)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 3 × 1\n  Species   \n  <fct>     \n1 setosa    \n2 versicolor\n3 virginica \n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\niris |> as_tibble() |> distinct(Petal.Length, .keep_all = T)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 43 × 5\n   Sepal.Length Sepal.Width Petal.Length Petal.Width Species   \n          <dbl>       <dbl>        <dbl>       <dbl> <fct>     \n 1          5.1         3.5          1.4         0.2 setosa    \n 2          4.7         3.2          1.3         0.2 setosa    \n 3          4.6         3.1          1.5         0.2 setosa    \n 4          5.4         3.9          1.7         0.4 setosa    \n 5          4.8         3.4          1.6         0.2 setosa    \n 6          4.3         3            1.1         0.1 setosa    \n 7          5.8         4            1.2         0.2 setosa    \n 8          4.6         3.6          1           0.2 setosa    \n 9          4.8         3.4          1.9         0.2 setosa    \n10          7           3.2          4.7         1.4 versicolor\n# … with 33 more rows\n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\niris |> as_tibble() |> slice(1:5)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 5 × 5\n  Sepal.Length Sepal.Width Petal.Length Petal.Width Species\n         <dbl>       <dbl>        <dbl>       <dbl> <fct>  \n1          5.1         3.5          1.4         0.2 setosa \n2          4.9         3            1.4         0.2 setosa \n3          4.7         3.2          1.3         0.2 setosa \n4          4.6         3.1          1.5         0.2 setosa \n5          5           3.6          1.4         0.2 setosa \n```\n:::\n\n```{.r .cell-code}\niris |> as_tibble() |> slice_head(n = 2)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 2 × 5\n  Sepal.Length Sepal.Width Petal.Length Petal.Width Species\n         <dbl>       <dbl>        <dbl>       <dbl> <fct>  \n1          5.1         3.5          1.4         0.2 setosa \n2          4.9         3            1.4         0.2 setosa \n```\n:::\n\n```{.r .cell-code}\niris |> as_tibble() |> slice_tail(n = 2)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 2 × 5\n  Sepal.Length Sepal.Width Petal.Length Petal.Width Species  \n         <dbl>       <dbl>        <dbl>       <dbl> <fct>    \n1          6.2         3.4          5.4         2.3 virginica\n2          5.9         3            5.1         1.8 virginica\n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\niris |> as_tibble() |> slice_min(Petal.Length)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 1 × 5\n  Sepal.Length Sepal.Width Petal.Length Petal.Width Species\n         <dbl>       <dbl>        <dbl>       <dbl> <fct>  \n1          4.6         3.6            1         0.2 setosa \n```\n:::\n\n```{.r .cell-code}\niris |> as_tibble() |> slice_max(Petal.Length)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 1 × 5\n  Sepal.Length Sepal.Width Petal.Length Petal.Width Species  \n         <dbl>       <dbl>        <dbl>       <dbl> <fct>    \n1          7.7         2.6          6.9         2.3 virginica\n```\n:::\n\n```{.r .cell-code}\niris |> as_tibble() |> slice_sample(n = 3)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 3 × 5\n  Sepal.Length Sepal.Width Petal.Length Petal.Width Species   \n         <dbl>       <dbl>        <dbl>       <dbl> <fct>     \n1          7.7         2.8          6.7         2   virginica \n2          7.2         3            5.8         1.6 virginica \n3          5.7         2.6          3.5         1   versicolor\n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\niris |> as_tibble() |> arrange(Sepal.Length)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 150 × 5\n   Sepal.Length Sepal.Width Petal.Length Petal.Width Species\n          <dbl>       <dbl>        <dbl>       <dbl> <fct>  \n 1          4.3         3            1.1         0.1 setosa \n 2          4.4         2.9          1.4         0.2 setosa \n 3          4.4         3            1.3         0.2 setosa \n 4          4.4         3.2          1.3         0.2 setosa \n 5          4.5         2.3          1.3         0.3 setosa \n 6          4.6         3.1          1.5         0.2 setosa \n 7          4.6         3.4          1.4         0.3 setosa \n 8          4.6         3.6          1           0.2 setosa \n 9          4.6         3.2          1.4         0.2 setosa \n10          4.7         3.2          1.3         0.2 setosa \n# … with 140 more rows\n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\niris |> as_tibble() |> \n  arrange(desc(Sepal.Length), desc(Sepal.Width))\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 150 × 5\n   Sepal.Length Sepal.Width Petal.Length Petal.Width Species  \n          <dbl>       <dbl>        <dbl>       <dbl> <fct>    \n 1          7.9         3.8          6.4         2   virginica\n 2          7.7         3.8          6.7         2.2 virginica\n 3          7.7         3            6.1         2.3 virginica\n 4          7.7         2.8          6.7         2   virginica\n 5          7.7         2.6          6.9         2.3 virginica\n 6          7.6         3            6.6         2.1 virginica\n 7          7.4         2.8          6.1         1.9 virginica\n 8          7.3         2.9          6.3         1.8 virginica\n 9          7.2         3.6          6.1         2.5 virginica\n10          7.2         3.2          6           1.8 virginica\n# … with 140 more rows\n```\n:::\n:::\n\n\n## グループ化・ネストに関する関数\n\n* `group_by()`：`tibble` をグループ化する\n* `group_nest()`：グループ化した `tibble` をネスト（入れ子）する\n* `nest()`：渡した列をネストする\n* `unnest()`：ネストされている列を展開（アンネスト）する\n* `group_map()`：グループ化した `tibble` に関数を適応して、リストを返す\n* `group_modify()`：グループ化した `tibble` に関数を適応して、tibble を返す\n\n## `tibble` のグループ化\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\niris |> as_tibble() |> select(1:3)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 150 × 3\n   Sepal.Length Sepal.Width Petal.Length\n          <dbl>       <dbl>        <dbl>\n 1          5.1         3.5          1.4\n 2          4.9         3            1.4\n 3          4.7         3.2          1.3\n 4          4.6         3.1          1.5\n 5          5           3.6          1.4\n 6          5.4         3.9          1.7\n 7          4.6         3.4          1.4\n 8          5           3.4          1.5\n 9          4.4         2.9          1.4\n10          4.9         3.1          1.5\n# … with 140 more rows\n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\niris |> as_tibble() |> group_by(Species) |> select(1:3)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nAdding missing grouping variables: `Species`\n```\n:::\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 150 × 4\n# Groups:   Species [3]\n   Species Sepal.Length Sepal.Width Petal.Length\n   <fct>          <dbl>       <dbl>        <dbl>\n 1 setosa           5.1         3.5          1.4\n 2 setosa           4.9         3            1.4\n 3 setosa           4.7         3.2          1.3\n 4 setosa           4.6         3.1          1.5\n 5 setosa           5           3.6          1.4\n 6 setosa           5.4         3.9          1.7\n 7 setosa           4.6         3.4          1.4\n 8 setosa           5           3.4          1.5\n 9 setosa           4.4         2.9          1.4\n10 setosa           4.9         3.1          1.5\n# … with 140 more rows\n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\niris |> as_tibble() |> group_nest(Species)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 3 × 2\n  Species                  data\n  <fct>      <list<tibble[,4]>>\n1 setosa               [50 × 4]\n2 versicolor           [50 × 4]\n3 virginica            [50 × 4]\n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\niris |> as_tibble() |> nest(data = matches(\"Length|Width\"))\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 3 × 2\n  Species    data             \n  <fct>      <list>           \n1 setosa     <tibble [50 × 4]>\n2 versicolor <tibble [50 × 4]>\n3 virginica  <tibble [50 × 4]>\n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\niris |> as_tibble() |> group_nest(Species) |> unnest(data)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 150 × 5\n   Species Sepal.Length Sepal.Width Petal.Length Petal.Width\n   <fct>          <dbl>       <dbl>        <dbl>       <dbl>\n 1 setosa           5.1         3.5          1.4         0.2\n 2 setosa           4.9         3            1.4         0.2\n 3 setosa           4.7         3.2          1.3         0.2\n 4 setosa           4.6         3.1          1.5         0.2\n 5 setosa           5           3.6          1.4         0.2\n 6 setosa           5.4         3.9          1.7         0.4\n 7 setosa           4.6         3.4          1.4         0.3\n 8 setosa           5           3.4          1.5         0.2\n 9 setosa           4.4         2.9          1.4         0.2\n10 setosa           4.9         3.1          1.5         0.1\n# … with 140 more rows\n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\niris |> as_tibble() |> group_by(Species) |> group_map(~head(.x, n = 2))\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[[1]]\n# A tibble: 2 × 4\n  Sepal.Length Sepal.Width Petal.Length Petal.Width\n         <dbl>       <dbl>        <dbl>       <dbl>\n1          5.1         3.5          1.4         0.2\n2          4.9         3            1.4         0.2\n\n[[2]]\n# A tibble: 2 × 4\n  Sepal.Length Sepal.Width Petal.Length Petal.Width\n         <dbl>       <dbl>        <dbl>       <dbl>\n1          7           3.2          4.7         1.4\n2          6.4         3.2          4.5         1.5\n\n[[3]]\n# A tibble: 2 × 4\n  Sepal.Length Sepal.Width Petal.Length Petal.Width\n         <dbl>       <dbl>        <dbl>       <dbl>\n1          6.3         3.3          6           2.5\n2          5.8         2.7          5.1         1.9\n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\niris |> as_tibble() |> group_by(Species) |> group_modify(~head(.x, n = 2))\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 6 × 5\n# Groups:   Species [3]\n  Species    Sepal.Length Sepal.Width Petal.Length Petal.Width\n  <fct>             <dbl>       <dbl>        <dbl>       <dbl>\n1 setosa              5.1         3.5          1.4         0.2\n2 setosa              4.9         3            1.4         0.2\n3 versicolor          7           3.2          4.7         1.4\n4 versicolor          6.4         3.2          4.5         1.5\n5 virginica           6.3         3.3          6           2.5\n6 virginica           5.8         2.7          5.1         1.9\n```\n:::\n:::\n\n\n## その他の関数\n\n* `drop_na()`：`NA`（欠損値）を含む行を削除\n* `replace_na()`：`NA`を他の値と書き換える\n* `fill()`：`NA`を直前の値で埋める\n\n* `separate()`：文字列の変数を任意の区切りで複数変数に分裂する\n* `unite()`：複数の変数を任意の区切りで 1 列にまとめる\n\n\n::: {.cell}\n\n```{.r .cell-code}\nX\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 4 × 2\n  x         y\n  <chr> <dbl>\n1 A     NA   \n2 B      5.21\n3 C      6.81\n4 G      6.13\n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nX |> drop_na()\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 3 × 2\n  x         y\n  <chr> <dbl>\n1 B      5.21\n2 C      6.81\n3 G      6.13\n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nX |> replace_na(list(x = \"Z\", y = 0))\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 4 × 2\n  x         y\n  <chr> <dbl>\n1 A      0   \n2 B      5.21\n3 C      6.81\n4 G      6.13\n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nX |> mutate(y = replace_na(y, 0))\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 4 × 2\n  x         y\n  <chr> <dbl>\n1 A      0   \n2 B      5.21\n3 C      6.81\n4 G      6.13\n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nY |> fill(z)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 4 × 2\n  x         z\n  <chr> <int>\n1 A         9\n2 C         8\n3 D         5\n4 E         5\n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ntibble(x = c(NA, \"Iris.setosa\", \"Iris.virginica\", \"Iris.versicolor\")) |> \n  separate(x, into = c(\"Genus\", \"Species\"))\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 4 × 2\n  Genus Species   \n  <chr> <chr>     \n1 <NA>  <NA>      \n2 Iris  setosa    \n3 Iris  virginica \n4 Iris  versicolor\n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ntibble(x = rep(\"Iris\", 3), y = c(\"setosa\", \"virginica\", \"versicolor\")) |> \n  unite(Species, x, y, sep = \"_\")\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 3 × 1\n  Species        \n  <chr>          \n1 Iris_setosa    \n2 Iris_virginica \n3 Iris_versicolor\n```\n:::\n:::\n\n\n## ピボット・`tibble`を変形する関数\n\n* `pivot_longer()`：`tibble` を wide format （横広）から long format （縦長）に変える\n* `pivot_wider()`：`tibble` をlong format から wide format に変える\n\n### 重要な引数\n\n`pivot_longer()`\n\n* `cols`：動かす変数\n* `names_to`：動かした変数の名前の移動先\n* `values_to`：動かした変数の値の移動先\n* `names_transform`：移動先の変数のタイプを変換\n\n`pivot_wider()`\n\n* `id_cols`：行（値）を区別するための列名\n* `names_from`：移動先の列名になる変数\n* `values_from`：移動したい値\n* `values_fill`：存在しない要素の埋め込み方法\n* `values_fn`：行の区別ができないときの処理（デフォルトはリスト）\n\n## `pivot_longer()` の使い方\n\n\n::: {.cell}\n\n```{.r .cell-code}\nrelig_income |> as_tibble()\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 18 × 11\n   religion      `<$10k` $10-2…¹ $20-3…² $30-4…³ $40-5…⁴ $50-7…⁵ $75-1…⁶ $100-…⁷\n   <chr>           <dbl>   <dbl>   <dbl>   <dbl>   <dbl>   <dbl>   <dbl>   <dbl>\n 1 Agnostic           27      34      60      81      76     137     122     109\n 2 Atheist            12      27      37      52      35      70      73      59\n 3 Buddhist           27      21      30      34      33      58      62      39\n 4 Catholic          418     617     732     670     638    1116     949     792\n 5 Don’t know/r…      15      14      15      11      10      35      21      17\n 6 Evangelical …     575     869    1064     982     881    1486     949     723\n 7 Hindu               1       9       7       9      11      34      47      48\n 8 Historically…     228     244     236     238     197     223     131      81\n 9 Jehovah's Wi…      20      27      24      24      21      30      15      11\n10 Jewish             19      19      25      25      30      95      69      87\n11 Mainline Prot     289     495     619     655     651    1107     939     753\n12 Mormon             29      40      48      51      56     112      85      49\n13 Muslim              6       7       9      10       9      23      16       8\n14 Orthodox           13      17      23      32      32      47      38      42\n15 Other Christ…       9       7      11      13      13      14      18      14\n16 Other Faiths       20      33      40      46      49      63      46      40\n17 Other World …       5       2       3       4       2       7       3       4\n18 Unaffiliated      217     299     374     365     341     528     407     321\n# … with 2 more variables: `>150k` <dbl>, `Don't know/refused` <dbl>, and\n#   abbreviated variable names ¹​`$10-20k`, ²​`$20-30k`, ³​`$30-40k`, ⁴​`$40-50k`,\n#   ⁵​`$50-75k`, ⁶​`$75-100k`, ⁷​`$100-150k`\n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nrelig_income |> as_tibble() |> \npivot_longer(!religion, names_to = \"income\", values_to = \"count\")\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 180 × 3\n   religion income             count\n   <chr>    <chr>              <dbl>\n 1 Agnostic <$10k                 27\n 2 Agnostic $10-20k               34\n 3 Agnostic $20-30k               60\n 4 Agnostic $30-40k               81\n 5 Agnostic $40-50k               76\n 6 Agnostic $50-75k              137\n 7 Agnostic $75-100k             122\n 8 Agnostic $100-150k            109\n 9 Agnostic >150k                 84\n10 Agnostic Don't know/refused    96\n# … with 170 more rows\n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nbillboard |> as_tibble()\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 317 × 79\n   artist track date.ent…¹   wk1   wk2   wk3   wk4   wk5   wk6   wk7   wk8   wk9\n   <chr>  <chr> <date>     <dbl> <dbl> <dbl> <dbl> <dbl> <dbl> <dbl> <dbl> <dbl>\n 1 2 Pac  Baby… 2000-02-26    87    82    72    77    87    94    99    NA    NA\n 2 2Ge+h… The … 2000-09-02    91    87    92    NA    NA    NA    NA    NA    NA\n 3 3 Doo… Kryp… 2000-04-08    81    70    68    67    66    57    54    53    51\n 4 3 Doo… Loser 2000-10-21    76    76    72    69    67    65    55    59    62\n 5 504 B… Wobb… 2000-04-15    57    34    25    17    17    31    36    49    53\n 6 98^0   Give… 2000-08-19    51    39    34    26    26    19     2     2     3\n 7 A*Tee… Danc… 2000-07-08    97    97    96    95   100    NA    NA    NA    NA\n 8 Aaliy… I Do… 2000-01-29    84    62    51    41    38    35    35    38    38\n 9 Aaliy… Try … 2000-03-18    59    53    38    28    21    18    16    14    12\n10 Adams… Open… 2000-08-26    76    76    74    69    68    67    61    58    57\n# … with 307 more rows, 67 more variables: wk10 <dbl>, wk11 <dbl>, wk12 <dbl>,\n#   wk13 <dbl>, wk14 <dbl>, wk15 <dbl>, wk16 <dbl>, wk17 <dbl>, wk18 <dbl>,\n#   wk19 <dbl>, wk20 <dbl>, wk21 <dbl>, wk22 <dbl>, wk23 <dbl>, wk24 <dbl>,\n#   wk25 <dbl>, wk26 <dbl>, wk27 <dbl>, wk28 <dbl>, wk29 <dbl>, wk30 <dbl>,\n#   wk31 <dbl>, wk32 <dbl>, wk33 <dbl>, wk34 <dbl>, wk35 <dbl>, wk36 <dbl>,\n#   wk37 <dbl>, wk38 <dbl>, wk39 <dbl>, wk40 <dbl>, wk41 <dbl>, wk42 <dbl>,\n#   wk43 <dbl>, wk44 <dbl>, wk45 <dbl>, wk46 <dbl>, wk47 <dbl>, wk48 <dbl>, …\n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nbillboard |> as_tibble() |> \n  pivot_longer(col = starts_with(\"wk\"),\n               names_to = \"week\", names_prefix = \"wk\",\n               values_to = \"rank\", values_drop_na = TRUE)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 5,307 × 5\n   artist  track                   date.entered week   rank\n   <chr>   <chr>                   <date>       <chr> <dbl>\n 1 2 Pac   Baby Don't Cry (Keep... 2000-02-26   1        87\n 2 2 Pac   Baby Don't Cry (Keep... 2000-02-26   2        82\n 3 2 Pac   Baby Don't Cry (Keep... 2000-02-26   3        72\n 4 2 Pac   Baby Don't Cry (Keep... 2000-02-26   4        77\n 5 2 Pac   Baby Don't Cry (Keep... 2000-02-26   5        87\n 6 2 Pac   Baby Don't Cry (Keep... 2000-02-26   6        94\n 7 2 Pac   Baby Don't Cry (Keep... 2000-02-26   7        99\n 8 2Ge+her The Hardest Part Of ... 2000-09-02   1        91\n 9 2Ge+her The Hardest Part Of ... 2000-09-02   2        87\n10 2Ge+her The Hardest Part Of ... 2000-09-02   3        92\n# … with 5,297 more rows\n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nwho |> as_tibble()\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 7,240 × 60\n   country     iso2  iso3   year new_s…¹ new_s…² new_s…³ new_s…⁴ new_s…⁵ new_s…⁶\n   <chr>       <chr> <chr> <int>   <int>   <int>   <int>   <int>   <int>   <int>\n 1 Afghanistan AF    AFG    1980      NA      NA      NA      NA      NA      NA\n 2 Afghanistan AF    AFG    1981      NA      NA      NA      NA      NA      NA\n 3 Afghanistan AF    AFG    1982      NA      NA      NA      NA      NA      NA\n 4 Afghanistan AF    AFG    1983      NA      NA      NA      NA      NA      NA\n 5 Afghanistan AF    AFG    1984      NA      NA      NA      NA      NA      NA\n 6 Afghanistan AF    AFG    1985      NA      NA      NA      NA      NA      NA\n 7 Afghanistan AF    AFG    1986      NA      NA      NA      NA      NA      NA\n 8 Afghanistan AF    AFG    1987      NA      NA      NA      NA      NA      NA\n 9 Afghanistan AF    AFG    1988      NA      NA      NA      NA      NA      NA\n10 Afghanistan AF    AFG    1989      NA      NA      NA      NA      NA      NA\n# … with 7,230 more rows, 50 more variables: new_sp_m65 <int>,\n#   new_sp_f014 <int>, new_sp_f1524 <int>, new_sp_f2534 <int>,\n#   new_sp_f3544 <int>, new_sp_f4554 <int>, new_sp_f5564 <int>,\n#   new_sp_f65 <int>, new_sn_m014 <int>, new_sn_m1524 <int>,\n#   new_sn_m2534 <int>, new_sn_m3544 <int>, new_sn_m4554 <int>,\n#   new_sn_m5564 <int>, new_sn_m65 <int>, new_sn_f014 <int>,\n#   new_sn_f1524 <int>, new_sn_f2534 <int>, new_sn_f3544 <int>, …\n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nwho %>% as_tibble() |>\n  pivot_longer(cols = new_sp_m014:newrel_f65,\n               names_to = c(\"diagnosis\", \"gender\", \"age\"),\n               names_pattern = \"new_?(.*)_(.)(.*)\",\n               values_to = \"count\", values_drop_na = TRUE)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 76,046 × 8\n   country     iso2  iso3   year diagnosis gender age   count\n   <chr>       <chr> <chr> <int> <chr>     <chr>  <chr> <int>\n 1 Afghanistan AF    AFG    1997 sp        m      014       0\n 2 Afghanistan AF    AFG    1997 sp        m      1524     10\n 3 Afghanistan AF    AFG    1997 sp        m      2534      6\n 4 Afghanistan AF    AFG    1997 sp        m      3544      3\n 5 Afghanistan AF    AFG    1997 sp        m      4554      5\n 6 Afghanistan AF    AFG    1997 sp        m      5564      2\n 7 Afghanistan AF    AFG    1997 sp        m      65        0\n 8 Afghanistan AF    AFG    1997 sp        f      014       5\n 9 Afghanistan AF    AFG    1997 sp        f      1524     38\n10 Afghanistan AF    AFG    1997 sp        f      2534     36\n# … with 76,036 more rows\n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nanscombe |> as_tibble()\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 11 × 8\n      x1    x2    x3    x4    y1    y2    y3    y4\n   <dbl> <dbl> <dbl> <dbl> <dbl> <dbl> <dbl> <dbl>\n 1    10    10    10     8  8.04  9.14  7.46  6.58\n 2     8     8     8     8  6.95  8.14  6.77  5.76\n 3    13    13    13     8  7.58  8.74 12.7   7.71\n 4     9     9     9     8  8.81  8.77  7.11  8.84\n 5    11    11    11     8  8.33  9.26  7.81  8.47\n 6    14    14    14     8  9.96  8.1   8.84  7.04\n 7     6     6     6     8  7.24  6.13  6.08  5.25\n 8     4     4     4    19  4.26  3.1   5.39 12.5 \n 9    12    12    12     8 10.8   9.13  8.15  5.56\n10     7     7     7     8  4.82  7.26  6.42  7.91\n11     5     5     5     8  5.68  4.74  5.73  6.89\n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nanscombe %>% as_tibble() |> \n pivot_longer(everything(), names_to = c(\".value\", \"set\"), names_pattern = \"(.)(.)\"\n )\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 44 × 3\n   set       x     y\n   <chr> <dbl> <dbl>\n 1 1        10  8.04\n 2 2        10  9.14\n 3 3        10  7.46\n 4 4         8  6.58\n 5 1         8  6.95\n 6 2         8  8.14\n 7 3         8  6.77\n 8 4         8  5.76\n 9 1        13  7.58\n10 2        13  8.74\n# … with 34 more rows\n```\n:::\n:::\n\n\n## `pivot_wider()` の使い方\n\n\n::: {.cell}\n\n```{.r .cell-code}\nfish_encounters\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 114 × 3\n   fish  station  seen\n   <fct> <fct>   <int>\n 1 4842  Release     1\n 2 4842  I80_1       1\n 3 4842  Lisbon      1\n 4 4842  Rstr        1\n 5 4842  Base_TD     1\n 6 4842  BCE         1\n 7 4842  BCW         1\n 8 4842  BCE2        1\n 9 4842  BCW2        1\n10 4842  MAE         1\n# … with 104 more rows\n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nfish_encounters |> as_tibble() |> \n  pivot_wider(names_from = station, values_from = seen)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 19 × 12\n   fish  Release I80_1 Lisbon  Rstr Base_TD   BCE   BCW  BCE2  BCW2   MAE   MAW\n   <fct>   <int> <int>  <int> <int>   <int> <int> <int> <int> <int> <int> <int>\n 1 4842        1     1      1     1       1     1     1     1     1     1     1\n 2 4843        1     1      1     1       1     1     1     1     1     1     1\n 3 4844        1     1      1     1       1     1     1     1     1     1     1\n 4 4845        1     1      1     1       1    NA    NA    NA    NA    NA    NA\n 5 4847        1     1      1    NA      NA    NA    NA    NA    NA    NA    NA\n 6 4848        1     1      1     1      NA    NA    NA    NA    NA    NA    NA\n 7 4849        1     1     NA    NA      NA    NA    NA    NA    NA    NA    NA\n 8 4850        1     1     NA     1       1     1     1    NA    NA    NA    NA\n 9 4851        1     1     NA    NA      NA    NA    NA    NA    NA    NA    NA\n10 4854        1     1     NA    NA      NA    NA    NA    NA    NA    NA    NA\n11 4855        1     1      1     1       1    NA    NA    NA    NA    NA    NA\n12 4857        1     1      1     1       1     1     1     1     1    NA    NA\n13 4858        1     1      1     1       1     1     1     1     1     1     1\n14 4859        1     1      1     1       1    NA    NA    NA    NA    NA    NA\n15 4861        1     1      1     1       1     1     1     1     1     1     1\n16 4862        1     1      1     1       1     1     1     1     1    NA    NA\n17 4863        1     1     NA    NA      NA    NA    NA    NA    NA    NA    NA\n18 4864        1     1     NA    NA      NA    NA    NA    NA    NA    NA    NA\n19 4865        1     1      1    NA      NA    NA    NA    NA    NA    NA    NA\n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nfish_encounters\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 114 × 3\n   fish  station  seen\n   <fct> <fct>   <int>\n 1 4842  Release     1\n 2 4842  I80_1       1\n 3 4842  Lisbon      1\n 4 4842  Rstr        1\n 5 4842  Base_TD     1\n 6 4842  BCE         1\n 7 4842  BCW         1\n 8 4842  BCE2        1\n 9 4842  BCW2        1\n10 4842  MAE         1\n# … with 104 more rows\n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n# 存在しない組み合わせの要素を埋める\nfish_encounters |>  as_tibble() |> \n  pivot_wider(names_from = station, values_from = seen, values_fill = 0)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 19 × 12\n   fish  Release I80_1 Lisbon  Rstr Base_TD   BCE   BCW  BCE2  BCW2   MAE   MAW\n   <fct>   <int> <int>  <int> <int>   <int> <int> <int> <int> <int> <int> <int>\n 1 4842        1     1      1     1       1     1     1     1     1     1     1\n 2 4843        1     1      1     1       1     1     1     1     1     1     1\n 3 4844        1     1      1     1       1     1     1     1     1     1     1\n 4 4845        1     1      1     1       1     0     0     0     0     0     0\n 5 4847        1     1      1     0       0     0     0     0     0     0     0\n 6 4848        1     1      1     1       0     0     0     0     0     0     0\n 7 4849        1     1      0     0       0     0     0     0     0     0     0\n 8 4850        1     1      0     1       1     1     1     0     0     0     0\n 9 4851        1     1      0     0       0     0     0     0     0     0     0\n10 4854        1     1      0     0       0     0     0     0     0     0     0\n11 4855        1     1      1     1       1     0     0     0     0     0     0\n12 4857        1     1      1     1       1     1     1     1     1     0     0\n13 4858        1     1      1     1       1     1     1     1     1     1     1\n14 4859        1     1      1     1       1     0     0     0     0     0     0\n15 4861        1     1      1     1       1     1     1     1     1     1     1\n16 4862        1     1      1     1       1     1     1     1     1     0     0\n17 4863        1     1      0     0       0     0     0     0     0     0     0\n18 4864        1     1      0     0       0     0     0     0     0     0     0\n19 4865        1     1      1     0       0     0     0     0     0     0     0\n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nus_rent_income |> as_tibble()\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 104 × 5\n   GEOID NAME       variable estimate   moe\n   <chr> <chr>      <chr>       <dbl> <dbl>\n 1 01    Alabama    income      24476   136\n 2 01    Alabama    rent          747     3\n 3 02    Alaska     income      32940   508\n 4 02    Alaska     rent         1200    13\n 5 04    Arizona    income      27517   148\n 6 04    Arizona    rent          972     4\n 7 05    Arkansas   income      23789   165\n 8 05    Arkansas   rent          709     5\n 9 06    California income      29454   109\n10 06    California rent         1358     3\n# … with 94 more rows\n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nus_rent_income |> as_tibble() |> \n  pivot_wider(names_from = variable, values_from = c(estimate, moe))\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 52 × 6\n   GEOID NAME                 estimate_income estimate_rent moe_income moe_rent\n   <chr> <chr>                          <dbl>         <dbl>      <dbl>    <dbl>\n 1 01    Alabama                        24476           747        136        3\n 2 02    Alaska                         32940          1200        508       13\n 3 04    Arizona                        27517           972        148        4\n 4 05    Arkansas                       23789           709        165        5\n 5 06    California                     29454          1358        109        3\n 6 08    Colorado                       32401          1125        109        5\n 7 09    Connecticut                    35326          1123        195        5\n 8 10    Delaware                       31560          1076        247       10\n 9 11    District of Columbia           43198          1424        681       17\n10 12    Florida                        25952          1077         70        3\n# … with 42 more rows\n```\n:::\n\n```{.r .cell-code}\n# us_rent_income  |> as_tibble() |> \n#   pivot_wider(names_from = variable,\n#               names_sep = \".\",\n#               values_from = c(estimate, moe))\n\n# us_rent_income  |> as_tibble() |> \n#   pivot_wider(names_from = variable,\n#               names_glue = \"{variable}_{.value}\",\n#               values_from = c(estimate, moe))\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nwarpbreaks |> as_tibble()\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 54 × 3\n   breaks wool  tension\n    <dbl> <fct> <fct>  \n 1     26 A     L      \n 2     30 A     L      \n 3     54 A     L      \n 4     25 A     L      \n 5     70 A     L      \n 6     52 A     L      \n 7     51 A     L      \n 8     26 A     L      \n 9     67 A     L      \n10     18 A     M      \n# … with 44 more rows\n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nwarpbreaks |> as_tibble() |> \n  pivot_wider(names_from = wool,\n              values_from = breaks)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning: Values from `breaks` are not uniquely identified; output will contain list-cols.\n* Use `values_fn = list` to suppress this warning.\n* Use `values_fn = {summary_fun}` to summarise duplicates.\n* Use the following dplyr code to identify duplicates.\n  {data} %>%\n    dplyr::group_by(tension, wool) %>%\n    dplyr::summarise(n = dplyr::n(), .groups = \"drop\") %>%\n    dplyr::filter(n > 1L)\n```\n:::\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 3 × 3\n  tension A         B        \n  <fct>   <list>    <list>   \n1 L       <dbl [9]> <dbl [9]>\n2 M       <dbl [9]> <dbl [9]>\n3 H       <dbl [9]> <dbl [9]>\n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nwarpbreaks |> as_tibble()\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 54 × 3\n   breaks wool  tension\n    <dbl> <fct> <fct>  \n 1     26 A     L      \n 2     30 A     L      \n 3     54 A     L      \n 4     25 A     L      \n 5     70 A     L      \n 6     52 A     L      \n 7     51 A     L      \n 8     26 A     L      \n 9     67 A     L      \n10     18 A     M      \n# … with 44 more rows\n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nwarpbreaks |> as_tibble() |> \n  pivot_wider(names_from = wool,\n              values_from = breaks,\n              values_fn = mean)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 3 × 3\n  tension     A     B\n  <fct>   <dbl> <dbl>\n1 L        44.6  28.2\n2 M        24    28.8\n3 H        24.6  18.8\n```\n:::\n:::\n\n\n## 不都合なデータ構造\n\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nfname = \"photosynthesis1_low.csv\"\ndset1_low = read_csv(fname)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ndset1_low\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 35 × 12\n   sample   min   `0`   `5`  `10`  `15`  `20`  `25`  `30`  `35`  `40`  `45`\n    <dbl> <dbl> <dbl> <dbl> <dbl> <dbl> <dbl> <dbl> <dbl> <dbl> <dbl> <dbl>\n 1      1     0  9.99 10.1  10.0  10.0  10.1   9.81 10.0  10.1  10.0  10.2 \n 2      2     0  9.97  9.99 10.1  10.0   9.99  9.94  9.91  9.95  9.79  9.97\n 3      3     0 10.0  10.1  10.1   9.97 10.1  10.0  10.0  10.0   9.88 10.0 \n 4      4     0 10.0   9.87 10.1   9.87 10.0   9.95 10.2  10.0  10.1  10.1 \n 5      5     0  9.92  9.97  9.88  9.86 10.0   9.91 10.0   9.94 10.0   9.95\n 6      1     5  9.67 10.0   9.93 10.5  10.4  10.7  10.8  10.6  10.7  10.6 \n 7      2     5  9.40  9.87 10.1  10.0  10.4  10.6  10.7  10.6  10.6  10.7 \n 8      3     5  9.37  9.84 10.2  10.3  10.5  10.6  10.5  10.6  10.7  10.7 \n 9      4     5  9.52  9.71  9.92 10.1  10.5  10.5  10.7  10.5  10.7  10.8 \n10      5     5  9.65  9.83 10.1  10.4  10.4  10.6  10.5  10.5  10.7  10.7 \n# … with 25 more rows\n```\n:::\n:::\n\n\n`sample` と `min` の列はサンプル番号と時間 (minutes) の変数です。\nそれぞれに、サンプル番号と時間の値が入っています。\n`0` から `45` の列には溶存酸素濃度の値が入っています。\nこの時の変数名は光条件ですね。\n\n## ワイドからロングへ変換\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndset1_low |> \n  pivot_longer(cols = matches(\"[0-9]+\"),　names_to = \"light\",\n               names_transform  = list(light = as.numeric))\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 350 × 4\n   sample   min light value\n    <dbl> <dbl> <dbl> <dbl>\n 1      1     0     0  9.99\n 2      1     0     5 10.1 \n 3      1     0    10 10.0 \n 4      1     0    15 10.0 \n 5      1     0    20 10.1 \n 6      1     0    25  9.81\n 7      1     0    30 10.0 \n 8      1     0    35 10.1 \n 9      1     0    40 10.0 \n10      1     0    45 10.2 \n# … with 340 more rows\n```\n:::\n:::\n\n\n## 残りのデータの読み込み\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndset1_high = read_csv(\"photosynthesis1_high.csv\")\ndset2_low  = read_csv(\"photosynthesis2_low.csv\")\ndset2_high = read_csv(\"photosynthesis2_high.csv\")\n```\n:::\n\n\n## ピボットしてから結合\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndset1_low  = dset1_low  |> pivot_longer(cols = matches(\"[0-9]+\"), names_to = \"light\", names_transform = list(light = as.numeric))\ndset1_high = dset1_high |> pivot_longer(cols = matches(\"[0-9]+\"), names_to = \"light\", names_transform = list(light = as.numeric))\ndset2_low  = dset2_low  |> pivot_longer(cols = matches(\"[0-9]+\"), names_to = \"light\", names_transform = list(light = as.numeric))\ndset2_high = dset2_high |> pivot_longer(cols = matches(\"[0-9]+\"), names_to = \"light\", names_transform = list(light = as.numeric))\nalldata = bind_rows(dset1_low, dset2_low, dset1_high, dset2_high)\nalldata\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 910 × 4\n   sample   min light value\n    <dbl> <dbl> <dbl> <dbl>\n 1      1     0     0  9.99\n 2      1     0     5 10.1 \n 3      1     0    10 10.0 \n 4      1     0    15 10.0 \n 5      1     0    20 10.1 \n 6      1     0    25  9.81\n 7      1     0    30 10.0 \n 8      1     0    35 10.1 \n 9      1     0    40 10.0 \n10      1     0    45 10.2 \n# … with 900 more rows\n```\n:::\n:::\n\n\n## 結合してからピボット\n\n\n::: {.cell}\n::: {.cell-output .cell-output-stderr}\n```\nRows: 35 Columns: 12\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\ndbl (12): sample, min, 0, 5, 10, 15, 20, 25, 30, 35, 40, 45\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\nRows: 35 Columns: 5\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\ndbl (5): sample, min, 50, 75, 100\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\nRows: 35 Columns: 12\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\ndbl (12): sample, min, 0, 5, 10, 15, 20, 25, 30, 35, 40, 45\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\nRows: 35 Columns: 5\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\ndbl (5): sample, min, 50, 75, 100\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ndset1 = full_join(dset1_low, dset1_high, by = c(\"sample\", \"min\"))\ndset2 = full_join(dset2_low, dset2_high, by = c(\"sample\", \"min\"))\nalldata = bind_rows(dset1, dset2)\nalldata = alldata |> \n  pivot_longer(cols = matches(\"[0-9]+\"), names_to = \"light\", \n               names_transform = list(light = as.numeric))\n```\n:::\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}